## @file
#   Fault Tolerant Write Smm Driver.
#
#   This driver installs SMM Fault Tolerant Write (FTW) protocol, which provides fault
#   tolerant write capability in SMM environment for block devices. Its implementation
#   depends on the full functionality SMM FVB protocol that support read, write/erase
#   flash access.
#
# Copyright (c) 2010 - 2018, Intel Corporation. All rights reserved.<BR>
# Copyright (c) 2018, Linaro, Ltd. All rights reserved.<BR>
#
#  SPDX-License-Identifier: BSD-2-Clause-Patent
#
##

# DO NOT EDIT
# FILE auto-generated

[Defines]
  INF_VERSION                = 0x0001001b
  BASE_NAME                  = FaultTolerantWriteStandaloneMm
  FILE_GUID                  = 3aade4ec-63cc-4a48-a928-5a374dd463eb
  MODULE_TYPE                = MM_STANDALONE
  VERSION_STRING             = 1.0
  PI_SPECIFICATION_VERSION   = 0x00010032
  ENTRY_POINT                = StandaloneMmFaultTolerantWriteInitialize

[Packages.X64]
  MdePkg/MdePkg.dec
  MdeModulePkg/MdeModulePkg.dec

[Binaries.X64]
  PE32|FaultTolerantWriteStandaloneMm.efi

[PatchPcd.X64]

[Protocols.X64]
  ## SOMETIMES_CONSUMES
  gEfiSmmSwapAddressRangeProtocolGuid

  ## NOTIFY
  ## CONSUMES
  gEfiSmmFirmwareVolumeBlockProtocolGuid

  ## PRODUCES
  ## UNDEFINED # SmiHandlerRegister
  gEfiSmmFaultTolerantWriteProtocolGuid

  ## CONSUMES
  gEfiMmEndOfDxeProtocolGuid

  ## SOMETIMES_CONSUMES
  gEfiLoadedImageProtocolGuid


[Ppis.X64]

[Guids.X64]
  #
  # Signature in EFI_FAULT_TOLERANT_WORKING_BLOCK_HEADER
  #
  ## CONSUMES           ## GUID
  ## PRODUCES           ## GUID
  gEdkiiWorkingBlockSignatureGuid

  ## CONSUMES     ## HOB
  gVariableFlashInfoHobGuid


[PcdEx.X64]

[LibraryClasses.X64]
## @LIB_INSTANCES
#  MdePkg/Library/RegisterFilterLibNull/RegisterFilterLibNull.inf
#  MdePkg/Library/BasePcdLibNull/BasePcdLibNull.inf
#  MdePkg/Library/BaseDebugLibNull/BaseDebugLibNull.inf
#  MdePkg/Library/BaseMemoryLib/BaseMemoryLib.inf
#  MdePkg/Library/BaseLib/BaseLib.inf
#  MdePkg/Library/StandaloneMmServicesTableLib/StandaloneMmServicesTableLib.inf
#  MdeModulePkg/Library/BaseHobLibNull/BaseHobLibNull.inf
#  MdeModulePkg/Library/BaseMemoryAllocationLibNull/BaseMemoryAllocationLibNull.inf
#  MdePkg/Library/BaseReportStatusCodeLibNull/BaseReportStatusCodeLibNull.inf
#  MdePkg/Library/BaseSafeIntLib/BaseSafeIntLib.inf
#  MdePkg/Library/StandaloneMmDriverEntryPoint/StandaloneMmDriverEntryPoint.inf
#  MdeModulePkg/Library/BaseVariableFlashInfoLib/BaseVariableFlashInfoLib.inf

[Depex.X64]
#  TRUE



#
# The following information is for reference only and not required by the build tools.
#
#  VALID_ARCHITECTURES           = IA32 X64 ARM AARCH64
#

[BuildOptions.X64]
## @AsBuilt
##   GCC:DEBUG_GCC5_X64_ASLPP_FLAGS = -x c -E -include AutoGen.h
##   GCC:DEBUG_GCC5_X64_ASLDLINK_FLAGS = -nostdlib -Wl,-n,-q,--gc-sections -z common-page-size=0x40 -Wl,--defsym=PECOFF_HEADER_SIZE=0 -Wl,--script=$(EDK_TOOLS_PATH)/Scripts/GccBase.lds -Wl,--entry,ReferenceAcpiTable -u ReferenceAcpiTable -Wl,-m,elf_x86_64
##   GCC:DEBUG_GCC5_X64_GENFW_FLAGS = 
##   GCC:DEBUG_GCC5_X64_OBJCOPY_FLAGS = 
##   GCC:DEBUG_GCC5_X64_DEPS_FLAGS = -MMD -MF $@.deps
##   GCC:DEBUG_GCC5_X64_ASM_FLAGS = -c -x assembler -imacros AutoGen.h -m64
##   GCC:DEBUG_GCC5_X64_CC_FLAGS = -g -Os -fshort-wchar -fno-builtin -fno-strict-aliasing -Wall -Werror -Wno-array-bounds -include AutoGen.h -fno-common -ffunction-sections -fdata-sections -DSTRING_ARRAY_NAME=$(BASE_NAME)Strings -m64 -fno-stack-protector "-DEFIAPI=__attribute__((ms_abi))" -maccumulate-outgoing-args -mno-red-zone -Wno-address -mcmodel=small -fpie -fno-asynchronous-unwind-tables -Wno-address  -fno-omit-frame-pointer -flto -DUSING_LTO
##   GCC:DEBUG_GCC5_X64_ASMLINK_FLAGS = /nologo /tiny
##   GCC:DEBUG_GCC5_X64_VFR_FLAGS = -l -n
##   GCC:DEBUG_GCC5_X64_ASLCC_FLAGS = -x c -fno-lto -m64
##   GCC:DEBUG_GCC5_X64_APP_FLAGS = 
##   GCC:DEBUG_GCC5_X64_NASM_FLAGS = -f elf64
##   GCC:DEBUG_GCC5_X64_OPTROM_FLAGS = -e
##   GCC:DEBUG_GCC5_X64_DTC_FLAGS = -H epapr
##   GCC:DEBUG_GCC5_X64_SYMRENAME_FLAGS = Symbol renaming not needed for
##   GCC:DEBUG_GCC5_X64_RC_FLAGS = -I binary -O elf64-x86-64        -B i386        --rename-section .data=.hii
##   GCC:DEBUG_GCC5_X64_PP_FLAGS = -E -x assembler-with-cpp -include AutoGen.h
##   GCC:DEBUG_GCC5_X64_VFRPP_FLAGS = -x c -E -P -DVFRCOMPILE --include $(MODULE_NAME)StrDefs.h
##   GCC:DEBUG_GCC5_X64_DLINK_FLAGS = -nostdlib -Wl,-n,-q,--gc-sections -z common-page-size=0x40 -Wl,--entry,$(IMAGE_ENTRY_POINT) -u $(IMAGE_ENTRY_POINT) -Wl,-Map,$(DEST_DIR_DEBUG)/$(BASE_NAME).map,--whole-archive -Wl,-melf_x86_64,--oformat=elf64-x86-64,-pie -flto -Os
##   GCC:DEBUG_GCC5_X64_ASL_FLAGS = 
##   GCC:DEBUG_GCC5_X64_NASMB_FLAGS = -f bin
##   GCC:DEBUG_GCC5_X64_DLINK2_FLAGS = -Wl,--defsym=PECOFF_HEADER_SIZE=0x228 -Wl,--script=$(EDK_TOOLS_PATH)/Scripts/GccBase.lds -Wno-error

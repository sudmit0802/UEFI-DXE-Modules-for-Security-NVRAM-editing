//
//  VFR compiler version  2.01 (UEFI 2.4) Developer Build based on Revision: Unknown
//
extern unsigned char DriverSampleStrings[];
extern EFI_GUID gEfiHiiPlatformSetupFormsetGuid;
extern EFI_GUID gEfiHiiDriverHealthFormsetGuid;
extern EFI_GUID gEfiHiiUserCredentialFormsetGuid;
extern EFI_GUID gEfiHiiRestStyleFormsetGuid;
extern EFI_GUID gEfiHiiStandardFormGuid;
extern EFI_GUID { 0xA04A27f4, 0xDF00, 0x4D42, { 0xB5, 0x52, 0x39, 0x51, 0x13, 0x02, 0x11, 0x3D }};
extern EFI_GUID { 0xb3f56470, 0x6141, 0x4621, { 0x8f, 0x19, 0x70, 0x4e, 0x57, 0x7a, 0xa9, 0xe8 }};
extern EFI_GUID { 0xF5E655D9, 0x02A6, 0x46f2, { 0x9E, 0x76, 0xB8, 0xBE, 0x8E, 0x60, 0xAB, 0x22 }};
extern EFI_GUID gZeroGuid;
#pragma pack(1)
typedef struct {
  UINT16 NestByteField;
  UINT8 : 1;
  UINT8 NestBitCheckbox : 1;
  UINT8 NestBitOneof : 2;
  UINT8 : 0;
  UINT8 NestBitNumeric : 4;
} MY_BITS_DATA;
typedef union {
  UINT8 UnionNumeric;
  UINT8 UnionNumericAlias;
} MY_EFI_UNION_DATA;
typedef struct {
  UINT16 MyStringData[40];
  UINT16 SomethingHiddenForHtml;
  UINT8 HowOldAreYouInYearsManual;
  UINT16 HowTallAreYouManual;
  UINT8 HowOldAreYouInYears;
  UINT16 HowTallAreYou;
  UINT8 MyFavoriteNumber;
  UINT8 TestLateCheck;
  UINT8 TestLateCheck2;
  UINT8 QuestionAboutTreeHugging;
  UINT8 ChooseToActivateNuclearWeaponry;
  UINT8 SuppressGrayOutSomething;
  UINT8 OrderedList[8];
  UINT16 BootOrder[8];
  UINT8 BootOrderLarge;
  UINT8 DynamicRefresh;
  UINT8 DynamicOneof;
  UINT8 DynamicOrderedList[5];
  UINT8 Reserved;
  EFI_HII_REF RefData;
  UINT8 NameValueVar0;
  UINT16 NameValueVar1;
  UINT16 NameValueVar2[20];
  UINT8 SerialPortNo;
  UINT8 SerialPortStatus;
  UINT16 SerialPortIo;
  UINT8 SerialPortIrq;
  UINT8 GetDefaultValueFromCallBack;
  UINT8 GetDefaultValueFromAccess;
  EFI_HII_TIME Time;
  UINT8 RefreshGuidCount;
  UINT8 Match2;
  UINT8 GetDefaultValueFromCallBackForOrderedList[3];
  UINT8 BitCheckbox : 1;
  UINT8 ReservedBits : 7;
  UINT16 BitOneof : 6;
  UINT16 : 0;
  UINT16 BitNumeric : 12;
  MY_BITS_DATA MyBitData;
  MY_EFI_UNION_DATA MyUnionData;
  UINT8 QuestionXUefiKeywordRestStyle;
  UINT8 QuestionNonXUefiKeywordRestStyle;
  UINT8 QuestionApply;
} DRIVER_SAMPLE_CONFIGURATION;
typedef struct {
  UINT8 Field8;
  UINT16 Field16;
  UINT8 OrderedList[3];
  UINT16 SubmittedCallback;
} MY_EFI_VARSTORE_DATA;
typedef struct {
  MY_BITS_DATA BitsData;
  UINT32 EfiBitGrayoutTest : 5;
  UINT32 EfiBitNumeric : 4;
  UINT32 EfiBitOneof : 10;
  UINT32 EfiBitCheckbox : 1;
  UINT32 : 0;
} MY_EFI_BITS_VARSTORE_DATA;
#pragma pack()
formset
>00000000: 0E A7 F4 27 4A A0 00 DF 42 4D B5 52 39 51 13 02 11 3D 13 00 14 00 01 71 99 03 93 45 85 04 4B B4 5E 32 EB 83 26 04 0E 
>00000027: 5C 06 5B 00 00 00 
>0000002D: 5C 06 5D 00 01 00 
  guid = { 0xA04A27f4, 0xDF00, 0x4D42, {0xB5, 0x52, 0x39, 0x51, 0x13, 0x02, 0x11, 0x3D} },
  title = STRING_TOKEN(0x0013),
  help = STRING_TOKEN(0x0014),
  classguid = { 0x93039971, 0x8545, 0x4b04, { 0xb4, 0x5e, 0x32, 0xeb, 0x83, 0x26, 0x4, 0xe } },
  varstore DRIVER_SAMPLE_CONFIGURATION,
>00000033: 24 22 F4 27 4A A0 00 DF 42 4D B5 52 39 51 13 02 11 3D 34 12 DC 00 4D 79 49 66 72 4E 56 44 61 74 61 00 
    varid = 0x1234,
    name = MyIfrNVData,
    guid = { 0xA04A27f4, 0xDF00, 0x4D42, {0xB5, 0x52, 0x39, 0x51, 0x13, 0x02, 0x11, 0x3D} };
  efivarstore MY_EFI_VARSTORE_DATA,
>00000055: 26 23 01 00 F4 27 4A A0 00 DF 42 4D B5 52 39 51 13 02 11 3D 03 00 00 00 08 00 4D 79 45 66 69 56 61 72 00 
    attribute = 0x00000002 | 0x00000001,
    name = MyEfiVar,
    guid = { 0xA04A27f4, 0xDF00, 0x4D42, {0xB5, 0x52, 0x39, 0x51, 0x13, 0x02, 0x11, 0x3D} };
  efivarstore MY_EFI_BITS_VARSTORE_DATA,
>00000078: 26 26 02 00 F4 27 4A A0 00 DF 42 4D B5 52 39 51 13 02 11 3D 03 00 00 00 08 00 4D 79 45 66 69 42 69 74 56 61 72 00 
    attribute = 0x00000002 | 0x00000001,
    name = MyEfiBitVar,
    guid = { 0xA04A27f4, 0xDF00, 0x4D42, {0xB5, 0x52, 0x39, 0x51, 0x13, 0x02, 0x11, 0x3D} };
  efivarstore MY_EFI_UNION_DATA,
>0000009E: 26 28 03 00 F4 27 4A A0 00 DF 42 4D B5 52 39 51 13 02 11 3D 03 00 00 00 01 00 4D 79 45 66 69 55 6E 69 6F 6E 56 61 72 00 
    attribute = 0x00000002 | 0x00000001,
    name = MyEfiUnionVar,
    guid = { 0xA04A27f4, 0xDF00, 0x4D42, {0xB5, 0x52, 0x39, 0x51, 0x13, 0x02, 0x11, 0x3D} };
  namevaluevarstore MyNameValueVar,
>000000C6: 25 14 04 00 F4 27 4A A0 00 DF 42 4D B5 52 39 51 13 02 11 3D 
    name = STRING_TOKEN(0x0094),
    name = STRING_TOKEN(0x0095),
    name = STRING_TOKEN(0x0096),
    guid = { 0xA04A27f4, 0xDF00, 0x4D42, {0xB5, 0x52, 0x39, 0x51, 0x13, 0x02, 0x11, 0x3D} };
  defaultstore MyStandardDefault,
    prompt = STRING_TOKEN(0x005B),
    attribute = 0x0000;
  defaultstore MyManufactureDefault,
    prompt = STRING_TOKEN(0x005D),
    attribute = 0x0001;
  form formid = 1,
>000000DA: 01 86 01 00 15 00 
       title = STRING_TOKEN(0x0015);
    subtitle text = STRING_TOKEN(0x001A);
>000000E0: 02 87 1A 00 00 00 00 
>000000E7: 29 02 
    subtitle text = STRING_TOKEN(0x001B);
>000000E9: 02 87 1B 00 00 00 00 
>000000F0: 29 02 
    text
>000000F2: 03 08 1C 00 50 00 1D 00 
      help = STRING_TOKEN(0x0050),
      text = STRING_TOKEN(0x001C),
        text = STRING_TOKEN(0x001D);
    text
      help = STRING_TOKEN(0x0054),
      text = STRING_TOKEN(0x0054),
      flags = INTERACTIVE,
>000000FA: 0C 8F 54 00 54 00 37 12 00 00 FF FF 04 00 00 
      key = 0x1237;
>00000109: 29 02 
    text
      help = STRING_TOKEN(0x0055),
      text = STRING_TOKEN(0x0055),
      flags = INTERACTIVE,
>0000010B: 0C 8F 55 00 55 00 38 12 00 00 FF FF 04 00 00 
      key = 0x1238;
>0000011A: 29 02 
    text
      help = STRING_TOKEN(0x0057),
      text = STRING_TOKEN(0x0057),
      flags = INTERACTIVE,
>0000011C: 0C 8F 57 00 57 00 43 12 00 00 FF FF 04 00 00 
      key = 0x1243;
>0000012B: 29 02 
    text
      help = STRING_TOKEN(0x0058),
      text = STRING_TOKEN(0x0058),
      flags = INTERACTIVE,
>0000012D: 0C 8F 58 00 58 00 44 12 00 00 FF FF 04 00 00 
      key = 0x1244;
>0000013C: 29 02 
    oneof name = MyOneOf,
>0000013E: 05 91 1F 00 26 00 01 00 34 12 5D 00 00 10 00 02 00 
      varid = MyIfrNVData.SuppressGrayOutSomething,
      prompt = STRING_TOKEN(0x001F),
      help = STRING_TOKEN(0x0026),
      option text = STRING_TOKEN(0x002A), value = 0x0, flags = 0;
>0000014F: 09 07 2A 00 00 00 00 
      option text = STRING_TOKEN(0x002B), value = 0x1, flags = 0;
>00000156: 09 07 2B 00 00 00 01 
      option text = STRING_TOKEN(0x002C), value = 0x2, flags = DEFAULT;
>0000015D: 09 07 2C 00 10 00 02 
    endoneof;
>00000164: 29 02 
    oneof varid = MyIfrNVData.BootOrderLarge,
>00000166: 05 91 1F 00 26 00 02 00 34 12 76 00 00 10 00 01 00 
      prompt = STRING_TOKEN(0x001F),
      help = STRING_TOKEN(0x0026),
      default value = cond (pushthis == 0 ? 0 : cond ((questionref(MyOneOf) >> 0x4 & 0xF00) == 0x0 + 0x2 ? 0 : 1)),
>00000177: 5B 85 00 00 08 
>0000017C: 5A 82 
>0000017E: 58 82 
>00000180: 45 0A 00 00 00 00 00 00 00 00 
>0000018A: 2F 02 
>0000018C: 45 0A 00 00 00 00 00 00 00 00 
>00000196: 40 04 01 00 
>0000019A: 45 0A 04 00 00 00 00 00 00 00 
>000001A4: 39 02 
>000001A6: 45 0A 00 0F 00 00 00 00 00 00 
>000001B0: 35 02 
>000001B2: 45 0A 00 00 00 00 00 00 00 00 
>000001BC: 45 0A 02 00 00 00 00 00 00 00 
>000001C6: 3A 02 
>000001C8: 2F 02 
>000001CA: 45 0A 00 00 00 00 00 00 00 00 
>000001D4: 45 0A 01 00 00 00 00 00 00 00 
>000001DE: 50 02 
>000001E0: 50 02 
>000001E2: 29 02 
>000001E4: 29 02 
>000001E6: 29 02 
      option text = STRING_TOKEN(0x002D), value = 0x0, flags = 0;
>000001E8: 09 07 2D 00 00 00 00 
      option text = STRING_TOKEN(0x002E), value = 0x1, flags = 0;
>000001EF: 09 07 2E 00 00 00 01 
    endoneof;
>000001F6: 29 02 
    grayoutif ideqval MyIfrNVData.SuppressGrayOutSomething == 0x1;
>000001F8: 19 82 
>000001FA: 12 06 01 00 01 00 
      suppressif questionref(MyOneOf) == 0x0;
>00000200: 0A 82 
>00000202: 40 84 01 00 
>00000206: 45 0A 00 00 00 00 00 00 00 00 
>00000210: 2F 02 
>00000212: 29 02 
        checkbox varid = MyIfrNVData.ChooseToActivateNuclearWeaponry,
>00000214: 06 8E 2F 00 30 00 03 00 34 12 5C 00 00 03 
                 prompt = STRING_TOKEN(0x002F),
                 help = STRING_TOKEN(0x0030),
                 flags = CHECKBOX_DEFAULT | CHECKBOX_DEFAULT_MFG,
                 default = TRUE,
>00000222: 5B 06 00 00 00 01 
        endcheckbox;
>00000228: 29 02 
      endif;
>0000022A: 29 02 
    endif;
>0000022C: 29 02 
    suppressif ideqval MyIfrNVData.SuppressGrayOutSomething == 0x0;
>0000022E: 0A 82 
>00000230: 12 06 01 00 00 00 
      label 0x2222;
>00000236: 5F 15 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 00 22 22 
      orderedlist
>0000024B: 23 8F 8F 00 5A 00 04 00 34 12 66 00 10 08 00 
                varid = MyIfrNVData.BootOrder,
                prompt = STRING_TOKEN(0x008F),
                help = STRING_TOKEN(0x005A),
                flags = RESET_REQUIRED,
                option text = STRING_TOKEN(0x0091), value = 2, flags = 0;
>0000025A: 09 08 91 00 01 01 02 00 
                option text = STRING_TOKEN(0x0090), value = 1, flags = 0;
>00000262: 09 08 90 00 01 01 01 00 
                option text = STRING_TOKEN(0x0092), value = 3, flags = 0;
>0000026A: 09 08 92 00 01 01 03 00 
              suppressif ideqval MyIfrNVData.BootOrderLarge == 0;
>00000272: 0A 82 
>00000274: 12 06 02 00 00 00 
                option text = STRING_TOKEN(0x0093), value = 4, flags = 0;
>0000027A: 09 08 93 00 01 01 04 00 
              endif;
>00000282: 29 02 
      endlist;
>00000284: 29 02 
      label 0x2223;
>00000286: 5F 15 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 00 23 22 
    endif;
>0000029B: 29 02 
    disableif ideqval MyIfrNVData.SuppressGrayOutSomething == 0x2;
>0000029D: 1E 82 
>0000029F: 12 06 01 00 02 00 
      orderedlist
>000002A5: 23 8F 52 00 50 00 05 00 34 12 5E 00 10 08 00 
        varid = MyIfrNVData.OrderedList,
        prompt = STRING_TOKEN(0x0052),
        help = STRING_TOKEN(0x0050),
        flags = RESET_REQUIRED,
        option text = STRING_TOKEN(0x0027), value = 3, flags = 0;
>000002B4: 09 07 27 00 00 00 03 
        option text = STRING_TOKEN(0x0028), value = 2, flags = 0;
>000002BB: 09 07 28 00 00 00 02 
        option text = STRING_TOKEN(0x0029), value = 1, flags = 0;
>000002C2: 09 07 29 00 00 00 01 
        default = {1,2,3},
>000002C9: 5B 08 00 00 0B 01 02 03 
      endlist;
>000002D1: 29 02 
    endif;
>000002D3: 29 02 
    label 100;
>000002D5: 5F 15 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 00 64 00 
    goto 0x1234,
>000002EA: 0F 0F 41 00 51 00 34 12 00 00 FF FF 04 34 12 
      prompt = STRING_TOKEN(0x0041),
      help = STRING_TOKEN(0x0051),
      flags = INTERACTIVE,
      key = 0x1234;
    goto 0x1234,
>000002F9: 0F 0F 42 00 51 00 35 12 00 00 FF FF 04 34 12 
      prompt = STRING_TOKEN(0x0042),
      help = STRING_TOKEN(0x0051),
      flags = INTERACTIVE,
      key = 0x1235;
    oneof varid = MyIfrNVData.TestLateCheck,
>00000308: 05 91 52 00 26 00 06 00 34 12 59 00 10 10 00 01 00 
      prompt = STRING_TOKEN(0x0052),
      help = STRING_TOKEN(0x0026),
      flags = RESET_REQUIRED,
      option text = STRING_TOKEN(0x0027), value = 0, flags = 0;
>00000319: 09 07 27 00 00 00 00 
      option text = STRING_TOKEN(0x0028), value = 1, flags = DEFAULT;
>00000320: 09 07 28 00 10 00 01 
      warningif prompt = STRING_TOKEN(0x00AE), timeout = 5,
>00000327: 63 85 AE 00 05 
        ideqval MyIfrNVData.TestLateCheck == 0
>0000032C: 12 06 06 00 00 00 
      endif;
>00000332: 29 02 
    endoneof;
>00000334: 29 02 
    oneof varid = MyIfrNVData.TestLateCheck2,
>00000336: 05 91 53 00 26 00 07 00 34 12 5A 00 10 10 00 01 00 
      prompt = STRING_TOKEN(0x0053),
      help = STRING_TOKEN(0x0026),
      flags = RESET_REQUIRED,
      option text = STRING_TOKEN(0x0027), value = 0, flags = DEFAULT;
>00000347: 09 07 27 00 10 00 00 
      option text = STRING_TOKEN(0x0028), value = 1, flags = 0;
>0000034E: 09 07 28 00 00 00 01 
      inconsistentif prompt = STRING_TOKEN(0x0047),
>00000355: 11 84 47 00 
        ideqid MyIfrNVData.TestLateCheck == MyIfrNVData.TestLateCheck2
>00000359: 13 06 06 00 07 00 
      endif;
>0000035F: 29 02 
    endoneof;
>00000361: 29 02 
    oneof varid = MyIfrNVData.QuestionAboutTreeHugging,
>00000363: 05 91 20 00 26 00 08 00 34 12 5B 00 10 10 00 03 00 
      prompt = STRING_TOKEN(0x0020),
      help = STRING_TOKEN(0x0026),
      flags = RESET_REQUIRED,
      option text = STRING_TOKEN(0x0027), value = 0, flags = 0;
>00000374: 09 07 27 00 00 00 00 
      option text = STRING_TOKEN(0x0028), value = 1, flags = DEFAULT;
>0000037B: 09 07 28 00 10 00 01 
      option text = STRING_TOKEN(0x0029), value = 3, flags = 0;
>00000382: 09 07 29 00 00 00 03 
    endoneof;
>00000389: 29 02 
    oneof varid = MyIfrNVData.QuestionXUefiKeywordRestStyle,
>0000038B: 05 91 22 00 23 00 09 00 34 12 D9 00 30 10 00 03 00 
      prompt = STRING_TOKEN(0x0022),
      help = STRING_TOKEN(0x0023),
      flags = RESET_REQUIRED | REST_STYLE,
      option text = STRING_TOKEN(0x0027), value = 0, flags = 0;
>0000039C: 09 07 27 00 00 00 00 
      option text = STRING_TOKEN(0x0028), value = 1, flags = DEFAULT;
>000003A3: 09 07 28 00 10 00 01 
      option text = STRING_TOKEN(0x0029), value = 3, flags = 0;
>000003AA: 09 07 29 00 00 00 03 
    endoneof;
>000003B1: 29 02 
    numeric varid = MyIfrNVData.QuestionNonXUefiKeywordRestStyle,
>000003B3: 07 91 24 00 25 00 0A 00 34 12 DA 00 30 10 00 F0 00 
      prompt = STRING_TOKEN(0x0024),
      help = STRING_TOKEN(0x0025),
      flags = RESET_REQUIRED | REST_STYLE,
      minimum = 0,
      maximum = 0xf0,
      step = 0,
      default = 0,
>000003C4: 5B 06 00 00 00 00 
    endnumeric;
>000003CA: 29 02 
    string varid = MyIfrNVData.MyStringData,
>000003CC: 1C 90 48 00 49 00 36 12 34 12 00 00 04 06 28 00 
              prompt = STRING_TOKEN(0x0048),
              help = STRING_TOKEN(0x0049),
              flags = INTERACTIVE,
              key = 0x1236,
              minsize = 6,
              maxsize = 40,
              inconsistentif prompt = STRING_TOKEN(0x0063),
>000003DC: 11 84 63 00 
                pushthis != stringref(STRING_TOKEN(0x0062))
>000003E0: 58 82 
>000003E2: 4E 04 62 00 
>000003E6: 30 02 
>000003E8: 29 02 
              endif;
>000003EA: 29 02 
    endstring;
>000003EC: 29 02 
    numeric varid = MyIfrNVData.HowOldAreYouInYearsManual,
>000003EE: 07 91 32 00 35 00 0B 00 34 12 52 00 01 10 00 F0 00 
            prompt = STRING_TOKEN(0x0032),
            help = STRING_TOKEN(0x0035),
            flags = READ_ONLY,
            minimum = 0,
            maximum = 0xf0,
            step = 0,
            default = 21,
>000003FF: 5B 06 00 00 00 15 
    endnumeric;
>00000405: 29 02 
    numeric varid = MyIfrNVData.HowOldAreYouInYearsManual,
>00000407: 07 91 33 00 35 00 0C 00 34 12 52 00 00 10 00 F0 00 
            prompt = STRING_TOKEN(0x0033),
            help = STRING_TOKEN(0x0035),
            minimum = 0,
            maximum = 0xf0,
            step = 0,
            default value = questionrefval(devicepath = STRING_TOKEN (0x006D), guid = { 0xA04A27f4, 0xDF00, 0x4D42, {0xB5, 0x52, 0x39, 0x51, 0x13, 0x02, 0x11, 0x3D} }, 0x1111),
>00000418: 5B 85 00 00 08 
>0000041D: 5A 82 
>0000041F: 45 8A 11 11 00 00 00 00 00 00 
>00000429: 51 14 6D 00 F4 27 4A A0 00 DF 42 4D B5 52 39 51 13 02 11 3D 
>0000043D: 29 02 
>0000043F: 29 02 
>00000441: 29 02 
            inconsistentif prompt = STRING_TOKEN(0x0047),
>00000443: 11 84 47 00 
              ideqval MyIfrNVData.HowOldAreYouInYearsManual == 99
>00000447: 12 86 0C 00 63 00 
>00000465: 29 02 
              OR
>00000453: 16 02 
              ideqid MyIfrNVData.HowOldAreYouInYearsManual == MyEfiVar.Field8
>0000044D: 13 06 0C 00 11 11 
              OR
>00000463: 16 02 
              ideqvallist MyIfrNVData.HowOldAreYouInYearsManual == 1 3 5 7
>00000455: 14 0E 0C 00 04 00 01 00 03 00 05 00 07 00 
            endif;
>00000467: 29 02 
    endnumeric;
>00000469: 29 02 
    numeric varid = MyEfiVar.Field8,
>0000046B: 07 91 34 00 36 00 11 11 01 00 00 00 04 20 00 FA 00 
            questionid = 0x1111,
            prompt = STRING_TOKEN(0x0034),
            help = STRING_TOKEN(0x0036),
            flags = DISPLAY_UINT_HEX | INTERACTIVE,
            minimum = 0,
            maximum = 250,
            default = 18, defaultstore = MyStandardDefault,
>0000047C: 5B 06 00 00 00 12 
            default = 19, defaultstore = MyManufactureDefault,
>00000482: 5B 06 01 00 00 13 
    endnumeric;
>00000488: 29 02 
    numeric varid = MyNameValueVar[0],
>0000048A: 07 91 94 00 5F 00 0D 00 04 00 94 00 00 10 00 FF 00 
            prompt = STRING_TOKEN(0x0094),
            help = STRING_TOKEN(0x005F),
            flags = NUMERIC_SIZE_1,
            minimum = 0,
            maximum = 0xff,
            step = 0,
            locked,
>0000049B: 0B 02 
            default = 16, defaultstore = MyStandardDefault,
>0000049D: 5B 06 00 00 00 10 
            default = 17, defaultstore = MyManufactureDefault,
>000004A3: 5B 06 01 00 00 11 
    endnumeric;
>000004A9: 29 02 
    numeric varid = MyNameValueVar[1],
>000004AB: 07 94 95 00 60 00 0E 00 04 00 95 00 00 11 00 00 FF FF 00 00 
            prompt = STRING_TOKEN(0x0095),
            help = STRING_TOKEN(0x0060),
            flags = NUMERIC_SIZE_2,
            minimum = 0,
            maximum = 0xffff,
            step = 0,
            default = 18, defaultstore = MyStandardDefault,
>000004BF: 5B 07 00 00 01 12 00 
            default = 19, defaultstore = MyManufactureDefault,
>000004C6: 5B 07 01 00 01 13 00 
    endnumeric;
>000004CD: 29 02 
    string varid = MyNameValueVar[2],
>000004CF: 1C 90 96 00 61 00 0F 00 04 00 96 00 00 02 14 00 
              prompt = STRING_TOKEN(0x0096),
              help = STRING_TOKEN(0x0061),
              minsize = 2,
              maxsize = 0x14,
    endstring;
>000004DF: 29 02 
    oneof varid = MyEfiVar.Field16,
>000004E1: 05 94 1F 00 1E 00 10 00 01 00 01 00 00 11 00 00 01 00 00 00 
      prompt = STRING_TOKEN(0x001F),
      help = STRING_TOKEN(0x001E),
      option text = STRING_TOKEN(0x002D), value = 0x0, flags = 0;
>000004F5: 09 08 2D 00 01 01 00 00 
      option text = STRING_TOKEN(0x002E), value = 0x1, flags = DEFAULT;
>000004FD: 09 08 2E 00 11 01 01 00 
    endoneof;
>00000505: 29 02 
    label 0x01;
>00000507: 5F 15 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 00 01 00 
    label 0x1000;
>0000051C: 5F 15 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 00 00 10 
    grayoutif ideqval MyIfrNVData.HowOldAreYouInYearsManual == 23 AND ideqval MyIfrNVData.SuppressGrayOutSomething == 0x1;
>00000531: 19 82 
>00000533: 12 86 0C 00 17 00 
>00000539: 12 06 01 00 01 00 
>0000053F: 15 02 
>00000541: 29 02 
      numeric varid = MyIfrNVData.HowOldAreYouInYears,
>00000543: 07 91 31 00 37 00 11 00 34 12 55 00 00 10 00 F3 01 
              prompt = STRING_TOKEN(0x0031),
              help = STRING_TOKEN(0x0037),
              minimum = 0,
              maximum = 243,
              step = 1,
              default = 18, defaultstore = MyStandardDefault,
>00000554: 5B 06 00 00 00 12 
              default = 19, defaultstore = MyManufactureDefault,
>0000055A: 5B 06 01 00 00 13 
      endnumeric;
>00000560: 29 02 
    endif;
>00000562: 29 02 
    numeric varid = MyIfrNVData.GetDefaultValueFromAccess,
>00000564: 07 91 69 00 6A 00 39 12 34 12 C6 00 04 20 00 FF 01 
            questionid = 0x1239,
            prompt = STRING_TOKEN(0x0069),
            help = STRING_TOKEN(0x006A),
            flags = DISPLAY_UINT_HEX | INTERACTIVE,
            minimum = 0,
            maximum = 255,
            step = 1,
            default = 18,
>00000575: 5B 06 00 00 00 12 
    endnumeric;
>0000057B: 29 02 
    numeric varid = MyIfrNVData.GetDefaultValueFromCallBack,
>0000057D: 07 91 67 00 68 00 40 12 34 12 C5 00 04 20 00 FF 01 
            questionid = 0x1240,
            prompt = STRING_TOKEN(0x0067),
            help = STRING_TOKEN(0x0068),
            flags = DISPLAY_UINT_HEX | INTERACTIVE,
            minimum = 0,
            maximum = 255,
            step = 1,
            default = 18,
>0000058E: 5B 06 00 00 00 12 
    endnumeric;
>00000594: 29 02 
    orderedlist
>00000596: 23 8F 67 00 68 00 52 12 34 12 CC 00 04 03 00 
        varid = MyIfrNVData.GetDefaultValueFromCallBackForOrderedList,
        questionid = 0x1252,
        prompt = STRING_TOKEN(0x0067),
        help = STRING_TOKEN(0x0068),
        flags = INTERACTIVE,
        option text = STRING_TOKEN(0x0027), value = 1, flags = 0;
>000005A5: 09 07 27 00 00 00 01 
        option text = STRING_TOKEN(0x0028), value = 2, flags = 0;
>000005AC: 09 07 28 00 00 00 02 
        option text = STRING_TOKEN(0x0029), value = 3, flags = 0;
>000005B3: 09 07 29 00 00 00 03 
    endlist;
>000005BA: 29 02 
    resetbutton
>000005BC: 0D 88 5B 00 5C 00 00 00 
      defaultstore = MyStandardDefault,
      prompt = STRING_TOKEN(0x005B),
      help = STRING_TOKEN(0x005C),
    endresetbutton;
>000005C4: 29 02 
    resetbutton
>000005C6: 0D 88 5D 00 5E 00 01 00 
      defaultstore = MyManufactureDefault,
      prompt = STRING_TOKEN(0x005D),
      help = STRING_TOKEN(0x005E),
    endresetbutton;
>000005CE: 29 02 
    grayoutif NOT security ({ 0x85b75607, 0xf7ce, 0x471e, { 0xb7, 0xe4, 0x2a, 0xea, 0x5f, 0x72, 0x32, 0xee } });
>000005D0: 19 82 
>000005D2: 60 92 07 56 B7 85 CE F7 1E 47 B7 E4 2A EA 5F 72 32 EE 
>000005E4: 17 02 
>000005E6: 29 02 
      text
>000005E8: 03 08 38 00 39 00 00 00 
        help = STRING_TOKEN(0x0039),
        text = STRING_TOKEN(0x0038);
    endif;
>000005F0: 29 02 
    numeric varid = MyEfiVar.SubmittedCallback,
>000005F2: 07 94 6E 00 6F 00 50 12 01 00 06 00 04 11 00 00 FF 00 00 00 
            questionid = 0x1250,
            prompt = STRING_TOKEN(0x006E),
            help = STRING_TOKEN(0x006F),
            flags = INTERACTIVE,
            minimum = 0,
            maximum = 255,
            default = 18,
>00000606: 5B 07 00 00 01 12 00 
    endnumeric;
>0000060D: 29 02 
    numeric varid = MyIfrNVData.QuestionApply,
>0000060F: 07 91 70 00 71 00 53 12 34 12 DB 00 04 10 00 FF 00 
            questionid = 0x1253,
            prompt = STRING_TOKEN(0x0070),
            help = STRING_TOKEN(0x0071),
            flags = INTERACTIVE,
            minimum = 0,
            maximum = 255,
            default = 19,
>00000620: 5B 06 00 00 00 13 
    endnumeric;
>00000626: 29 02 
    text
      help = STRING_TOKEN(0x0073),
      text = STRING_TOKEN(0x0072),
      flags = INTERACTIVE,
>00000628: 0C 8F 72 00 73 00 30 13 00 00 FF FF 04 00 00 
      key = 0x1330;
>00000637: 29 02 
    goto 2,
>00000639: 0F 0F 3B 00 51 00 12 00 00 00 FF FF 00 02 00 
      prompt = STRING_TOKEN(0x003B),
      help = STRING_TOKEN(0x0051);
    goto 3,
>00000648: 0F 0F 3C 00 51 00 13 00 00 00 FF FF 00 03 00 
      prompt = STRING_TOKEN(0x003C),
      help = STRING_TOKEN(0x0051);
    goto 4,
>00000657: 0F 0F 3D 00 51 00 14 00 00 00 FF FF 00 04 00 
      prompt = STRING_TOKEN(0x003D),
      help = STRING_TOKEN(0x0051);
    goto 5,
>00000666: 0F 0F 3F 00 40 00 15 00 00 00 FF FF 00 05 00 
      prompt = STRING_TOKEN(0x003F),
      help = STRING_TOKEN(0x0040);
    goto 6,
>00000675: 0F 0F 3E 00 51 00 16 00 00 00 FF FF 00 06 00 
      prompt = STRING_TOKEN(0x003E),
      help = STRING_TOKEN(0x0051);
    goto
>00000684: 0F 21 6B 00 6C 00 17 00 00 00 FF FF 00 01 00 01 00 70 64 F5 B3 41 61 21 46 8F 19 70 4E 57 7A A9 E8 
      formsetguid = { 0xb3f56470, 0x6141, 0x4621, {0x8f, 0x19, 0x70, 0x4e, 0x57, 0x7a, 0xa9, 0xe8} },
      formid = 0x1,
      question = 0x1,
      prompt = STRING_TOKEN(0x006B),
      help = STRING_TOKEN(0x006C);
    guidop
>000006A5: 5F 9A F4 27 4A A0 00 DF 42 4D B5 52 39 51 13 02 11 3D 21 21 21 21 00 00 00 00 
      guid = { 0xA04A27f4, 0xDF00, 0x4D42, {0xB5, 0x52, 0x39, 0x51, 0x13, 0x02, 0x11, 0x3D} },
      datatype = MY_EFI_VARSTORE_DATA,
        data.Field8 = 0x21,
        data.Field16 = 0x2121,
        data.OrderedList[0] = 0x21,
    endguidop;
>000006BF: 29 02 
     goto 7,
>000006C1: 0F 0F 76 00 77 00 18 00 00 00 FF FF 00 07 00 
      prompt = STRING_TOKEN(0x0076),
      help = STRING_TOKEN(0x0077);
  endform;
>000006D0: 29 02 
  suppressif ideqval MyIfrNVData.BootOrderLarge == 0;
>000006D2: 0A 82 
>000006D4: 12 06 02 00 00 00 
    form formid = 2,
>000006DA: 01 86 02 00 16 00 
      title = STRING_TOKEN(0x0016);
      date
>000006E0: 1A 8E 4C 00 4D 00 19 00 00 00 FF FF 00 10 
        name = Date,
        prompt = STRING_TOKEN(0x004C),
        help = STRING_TOKEN(0x004D),
        flags = STORAGE_TIME,
        default = 2004/1/1,
>000006EE: 5B 09 00 00 06 D4 07 01 01 
        inconsistentif prompt = STRING_TOKEN(0x0047),
>000006F7: 11 84 47 00 
          ideqval Date.Day == 31
>000006FB: 40 84 19 00 
>000006FF: 44 06 00 00 00 FF 
>00000705: 35 02 
>00000707: 42 03 18 
>0000070A: 39 02 
>0000070C: 42 03 1F 
>0000070F: 2F 02 
          AND
>00000787: 15 02 
>00000789: 29 02 
          ideqvallist Date.Month == 2 4 6 9 11
>00000711: 40 04 19 00 
>00000715: 44 06 00 00 FF 00 
>0000071B: 35 02 
>0000071D: 42 03 10 
>00000720: 39 02 
>00000722: 42 03 02 
>00000725: 2F 02 
>00000727: 40 04 19 00 
>0000072B: 44 06 00 00 FF 00 
>00000731: 35 02 
>00000733: 42 03 10 
>00000736: 39 02 
>00000738: 42 03 04 
>0000073B: 2F 02 
>0000073D: 16 02 
>0000073F: 40 04 19 00 
>00000743: 44 06 00 00 FF 00 
>00000749: 35 02 
>0000074B: 42 03 10 
>0000074E: 39 02 
>00000750: 42 03 06 
>00000753: 2F 02 
>00000755: 16 02 
>00000757: 40 04 19 00 
>0000075B: 44 06 00 00 FF 00 
>00000761: 35 02 
>00000763: 42 03 10 
>00000766: 39 02 
>00000768: 42 03 09 
>0000076B: 2F 02 
>0000076D: 16 02 
>0000076F: 40 04 19 00 
>00000773: 44 06 00 00 FF 00 
>00000779: 35 02 
>0000077B: 42 03 10 
>0000077E: 39 02 
>00000780: 42 03 0B 
>00000783: 2F 02 
>00000785: 16 02 
        endif;
>0000078B: 29 02 
        inconsistentif prompt = STRING_TOKEN(0x0047),
>0000078D: 11 84 47 00 
          ideqval Date.Day == 30
>00000791: 40 84 19 00 
>00000795: 44 06 00 00 00 FF 
>0000079B: 35 02 
>0000079D: 42 03 18 
>000007A0: 39 02 
>000007A2: 42 03 1E 
>000007A5: 2F 02 
          AND
>000007BD: 15 02 
>000007BF: 29 02 
          ideqval Date.Month == 2
>000007A7: 40 04 19 00 
>000007AB: 44 06 00 00 FF 00 
>000007B1: 35 02 
>000007B3: 42 03 10 
>000007B6: 39 02 
>000007B8: 42 03 02 
>000007BB: 2F 02 
        endif;
>000007C1: 29 02 
        inconsistentif prompt = STRING_TOKEN(0x0047),
>000007C3: 11 84 47 00 
          ideqval Date.Day == 0x1D
>000007C7: 40 84 19 00 
>000007CB: 44 06 00 00 00 FF 
>000007D1: 35 02 
>000007D3: 42 03 18 
>000007D6: 39 02 
>000007D8: 42 03 1D 
>000007DB: 2F 02 
          AND
>000007F3: 15 02 
          ideqval Date.Month == 2
>000007DD: 40 04 19 00 
>000007E1: 44 06 00 00 FF 00 
>000007E7: 35 02 
>000007E9: 42 03 10 
>000007EC: 39 02 
>000007EE: 42 03 02 
>000007F1: 2F 02 
          AND
>000008D6: 15 02 
>000008D8: 29 02 
          NOT
>000008D4: 17 02 
          ideqvallist Date.Year == 2004 2008 20012 20016 2020 2024 2028 2032 2036
>000007F5: 40 04 19 00 
>000007F9: 44 06 FF FF 00 00 
>000007FF: 35 02 
>00000801: 42 03 00 
>00000804: 39 02 
>00000806: 43 04 D4 07 
>0000080A: 2F 02 
>0000080C: 40 04 19 00 
>00000810: 44 06 FF FF 00 00 
>00000816: 35 02 
>00000818: 42 03 00 
>0000081B: 39 02 
>0000081D: 43 04 D8 07 
>00000821: 2F 02 
>00000823: 16 02 
>00000825: 40 04 19 00 
>00000829: 44 06 FF FF 00 00 
>0000082F: 35 02 
>00000831: 42 03 00 
>00000834: 39 02 
>00000836: 43 04 2C 4E 
>0000083A: 2F 02 
>0000083C: 16 02 
>0000083E: 40 04 19 00 
>00000842: 44 06 FF FF 00 00 
>00000848: 35 02 
>0000084A: 42 03 00 
>0000084D: 39 02 
>0000084F: 43 04 30 4E 
>00000853: 2F 02 
>00000855: 16 02 
>00000857: 40 04 19 00 
>0000085B: 44 06 FF FF 00 00 
>00000861: 35 02 
>00000863: 42 03 00 
>00000866: 39 02 
>00000868: 43 04 E4 07 
>0000086C: 2F 02 
>0000086E: 16 02 
>00000870: 40 04 19 00 
>00000874: 44 06 FF FF 00 00 
>0000087A: 35 02 
>0000087C: 42 03 00 
>0000087F: 39 02 
>00000881: 43 04 E8 07 
>00000885: 2F 02 
>00000887: 16 02 
>00000889: 40 04 19 00 
>0000088D: 44 06 FF FF 00 00 
>00000893: 35 02 
>00000895: 42 03 00 
>00000898: 39 02 
>0000089A: 43 04 EC 07 
>0000089E: 2F 02 
>000008A0: 16 02 
>000008A2: 40 04 19 00 
>000008A6: 44 06 FF FF 00 00 
>000008AC: 35 02 
>000008AE: 42 03 00 
>000008B1: 39 02 
>000008B3: 43 04 F0 07 
>000008B7: 2F 02 
>000008B9: 16 02 
>000008BB: 40 04 19 00 
>000008BF: 44 06 FF FF 00 00 
>000008C5: 35 02 
>000008C7: 42 03 00 
>000008CA: 39 02 
>000008CC: 43 04 F4 07 
>000008D0: 2F 02 
>000008D2: 16 02 
        endif;
>000008DA: 29 02 
      enddate;
>000008DC: 29 02 
      text
        help = STRING_TOKEN(0x0059),
        text = STRING_TOKEN(0x0059),
        flags = INTERACTIVE,
>000008DE: 0C 8F 59 00 59 00 41 12 00 00 FF FF 04 00 00 
        key = 0x1241;
>000008ED: 29 02 
      text
        help = STRING_TOKEN(0x0056),
        text = STRING_TOKEN(0x0056),
        flags = INTERACTIVE,
>000008EF: 0C 8F 56 00 56 00 42 12 00 00 FF FF 04 00 00 
        key = 0x1242;
>000008FE: 29 02 
      time
>00000900: 1B 8E 4E 00 4F 00 1A 00 00 00 FF FF 00 10 
        prompt = STRING_TOKEN(0x004E),
        help = STRING_TOKEN(0x004F),
        flags = STORAGE_TIME,
      endtime;
>0000090E: 29 02 
      time
>00000910: 1B 8E 4E 00 4E 00 1B 00 34 12 C7 00 00 04 
            name = MyTime,
            varid = MyIfrNVData.Time,
            prompt = STRING_TOKEN(0x004E),
            help = STRING_TOKEN(0x004E),
            flags = STORAGE_NORMAL | SECOND_SUPPRESS,
            default = 15:33:33,
>0000091E: 5B 08 00 00 05 0F 21 21 
      endtime;
>00000926: 29 02 
      checkbox varid = MyIfrNVData.ChooseToActivateNuclearWeaponry,
>00000928: 06 8E 2F 00 30 00 1C 00 34 12 5C 00 00 01 
              prompt = STRING_TOKEN(0x002F),
              help = STRING_TOKEN(0x0030),
              flags = CHECKBOX_DEFAULT,
      endcheckbox;
>00000936: 29 02 
      text
>00000938: 03 08 4A 00 50 00 00 00 
        help = STRING_TOKEN(0x0050),
        text = STRING_TOKEN(0x004A);
      text
>00000940: 03 08 4A 00 50 00 4B 00 
        help = STRING_TOKEN(0x0050),
        text = STRING_TOKEN(0x004A),
        text = STRING_TOKEN(0x004B);
      goto 1,
>00000948: 0F 0F 3A 00 51 00 1D 00 00 00 FF FF 00 01 00 
        prompt = STRING_TOKEN(0x003A),
        help = STRING_TOKEN(0x0051);
    goto
>00000957: 0F 8D 43 00 45 00 48 12 34 12 7F 00 04 
      varid = MyIfrNVData.RefData,
      prompt = STRING_TOKEN(0x0043),
      help = STRING_TOKEN(0x0045),
      flags = INTERACTIVE,
      key = 0x1248,
>0000097F: 29 02 
      default = 0;0;{ 0x0, 0x0, 0x0, {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0} };STRING_TOKEN(0x005A),
>00000964: 5B 1B 00 00 0C 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 5A 00 
    ;
    goto
>00000981: 0F 0D 44 00 46 00 49 12 00 00 FF FF 04 
      prompt = STRING_TOKEN(0x0044),
      help = STRING_TOKEN(0x0046),
      flags = INTERACTIVE,
      key = 0x1249;
    endform;
>0000098E: 29 02 
  endif;
>00000990: 29 02 
  form formid = 3, title = STRING_TOKEN(0x0017);
>00000992: 01 86 03 00 17 00 
    suppressif ideqval MyEfiVar.Field8 == 111;
>00000998: 0A 82 
>0000099A: 12 06 11 11 6F 00 
      text
>000009A0: 03 08 4A 00 50 00 00 00 
        help = STRING_TOKEN(0x0050),
        text = STRING_TOKEN(0x004A);
    endif;
>000009A8: 29 02 
    goto 1,
>000009AA: 0F 0F 3A 00 51 00 1E 00 00 00 FF FF 00 01 00 
      prompt = STRING_TOKEN(0x003A),
      help = STRING_TOKEN(0x0051);
    numeric varid = MyIfrNVData.DynamicRefresh,
>000009B9: 07 91 33 00 35 00 78 56 34 12 77 00 04 10 00 FF 00 
            prompt = STRING_TOKEN(0x0033),
            help = STRING_TOKEN(0x0035),
            flags = INTERACTIVE,
            key = 0x5678,
            minimum = 0,
            maximum = 0xff,
            step = 0,
            default = 0,
>000009CA: 5B 06 00 00 00 00 
            refresh interval = 3
>000009D0: 1D 03 03 
    endnumeric;
>000009D3: 29 02 
    grayoutif match2 (stringref(STRING_TOKEN(0x00B2)), stringref(STRING_TOKEN(0x00B1)), { 0x63E60A51, 0x497D, 0xD427, {0xC4, 0xA5, 0xB8, 0xAB, 0xDC, 0x3A, 0xAE, 0xB6 }});
>000009D5: 19 82 
>000009D7: 4E 84 B2 00 
>000009DB: 4E 04 B1 00 
>000009DF: 64 12 51 0A E6 63 7D 49 27 D4 C4 A5 B8 AB DC 3A AE B6 
>000009F1: 29 02 
      numeric
>000009F3: 07 91 AF 00 B0 00 1F 00 34 12 CB 00 00 10 00 F3 00 
        varid = MyIfrNVData.Match2,
        prompt = STRING_TOKEN(0x00AF),
        help = STRING_TOKEN(0x00B0),
        minimum = 0,
        maximum = 243,
      endnumeric;
>00000A04: 29 02 
    endif;
>00000A06: 29 02 
    label 0x2234;
>00000A08: 5F 15 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 00 34 22 
    label 0x2223;
>00000A1D: 5F 15 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 00 23 22 
  endform;
>00000A32: 29 02 
  formmap formid = 4,
>00000A34: 5D A8 04 00 97 00 F4 27 4A A0 00 DF 42 4D B5 52 39 51 13 02 11 3D 98 00 EC F4 D2 3B 24 E5 E4 46 A9 D8 51 01 17 42 55 62 
    maptitle = STRING_TOKEN(0x0097);
    mapguid = { 0xA04A27f4, 0xDF00, 0x4D42, {0xB5, 0x52, 0x39, 0x51, 0x13, 0x02, 0x11, 0x3D} };
    maptitle = STRING_TOKEN(0x0098);
    mapguid = { 0x3bd2f4ec, 0xe524, 0x46e4, { 0xa9, 0xd8, 0x51, 0x1, 0x17, 0x42, 0x55, 0x62 } };
    oneof varid = MyIfrNVData.SerialPortNo,
>00000A5C: 05 91 99 00 26 00 20 00 34 12 C0 00 00 10 00 04 00 
      prompt = STRING_TOKEN(0x0099),
      help = STRING_TOKEN(0x0026),
      read cond (get(MyIfrNVData.SerialPortStatus) != 0 ? 0 : cond ((get(MyIfrNVData.SerialPortIo) & 0xF00) >> 0x8 == get(MyIfrNVData.SerialPortIrq) - 1 ? UNDEFINED : map (get(MyIfrNVData.SerialPortIo) : 0x3f8,1; 0x2F8,2; 0x3E8,3; 0x2E8,4;)));
>00000A6D: 2D 02 
>00000A6F: 2B 87 34 12 C1 00 00 
>00000A76: 45 0A 00 00 00 00 00 00 00 00 
>00000A80: 30 02 
>00000A82: 45 0A 00 00 00 00 00 00 00 00 
>00000A8C: 2B 07 34 12 C2 00 01 
>00000A93: 45 0A 00 0F 00 00 00 00 00 00 
>00000A9D: 35 02 
>00000A9F: 45 0A 08 00 00 00 00 00 00 00 
>00000AA9: 39 02 
>00000AAB: 2B 07 34 12 C4 00 00 
>00000AB2: 45 0A 01 00 00 00 00 00 00 00 
>00000ABC: 3B 02 
>00000ABE: 2F 02 
>00000AC0: 55 02 
>00000AC2: 2B 07 34 12 C2 00 01 
>00000AC9: 22 82 
>00000ACB: 45 0A F8 03 00 00 00 00 00 00 
>00000AD5: 45 0A 01 00 00 00 00 00 00 00 
>00000ADF: 45 0A F8 02 00 00 00 00 00 00 
>00000AE9: 45 0A 02 00 00 00 00 00 00 00 
>00000AF3: 45 0A E8 03 00 00 00 00 00 00 
>00000AFD: 45 0A 03 00 00 00 00 00 00 00 
>00000B07: 45 0A E8 02 00 00 00 00 00 00 
>00000B11: 45 0A 04 00 00 00 00 00 00 00 
>00000B1B: 29 02 
>00000B1D: 50 02 
>00000B1F: 50 02 
>00000B21: 29 02 
      write set(MyIfrNVData.SerialPortStatus, pushthis != 0) AND set(MyIfrNVData.SerialPortIo, map (pushthis : 1,0x3F8; 2,0x2F8; 3,0x3E8; 4,0x2E8;)) AND set (MyIfrNVData.SerialPortIrq, map (pushthis: 1,4; 2,3; 3,4; 4,3;));
>00000B23: 2E 02 
>00000B25: 58 82 
>00000B27: 45 0A 00 00 00 00 00 00 00 00 
>00000B31: 30 02 
>00000B33: 2C 07 34 12 C1 00 00 
>00000B3A: 58 02 
>00000B3C: 22 82 
>00000B3E: 45 0A 01 00 00 00 00 00 00 00 
>00000B48: 45 0A F8 03 00 00 00 00 00 00 
>00000B52: 45 0A 02 00 00 00 00 00 00 00 
>00000B5C: 45 0A F8 02 00 00 00 00 00 00 
>00000B66: 45 0A 03 00 00 00 00 00 00 00 
>00000B70: 45 0A E8 03 00 00 00 00 00 00 
>00000B7A: 45 0A 04 00 00 00 00 00 00 00 
>00000B84: 45 0A E8 02 00 00 00 00 00 00 
>00000B8E: 29 02 
>00000B90: 2C 07 34 12 C2 00 01 
>00000B97: 15 02 
>00000B99: 58 02 
>00000B9B: 22 82 
>00000B9D: 45 0A 01 00 00 00 00 00 00 00 
>00000BA7: 45 0A 04 00 00 00 00 00 00 00 
>00000BB1: 45 0A 02 00 00 00 00 00 00 00 
>00000BBB: 45 0A 03 00 00 00 00 00 00 00 
>00000BC5: 45 0A 03 00 00 00 00 00 00 00 
>00000BCF: 45 0A 04 00 00 00 00 00 00 00 
>00000BD9: 45 0A 04 00 00 00 00 00 00 00 
>00000BE3: 45 0A 03 00 00 00 00 00 00 00 
>00000BED: 29 02 
>00000BEF: 2C 07 34 12 C4 00 00 
>00000BF6: 15 02 
>00000BF8: 29 02 
      option text = STRING_TOKEN(0x009A), value = 0x0, flags = DEFAULT;
>00000BFA: 09 07 9A 00 10 00 00 
      option text = STRING_TOKEN(0x009B), value = 0x1, flags = 0;
>00000C01: 09 07 9B 00 00 00 01 
      option text = STRING_TOKEN(0x009C), value = 0x2, flags = 0;
>00000C08: 09 07 9C 00 00 00 02 
      option text = STRING_TOKEN(0x009D), value = 0x3, flags = 0;
>00000C0F: 09 07 9D 00 00 00 03 
      option text = STRING_TOKEN(0x009E), value = 0x4, flags = 0;
>00000C16: 09 07 9E 00 00 00 04 
    endoneof;
>00000C1D: 29 02 
    grayoutif TRUE;
>00000C1F: 19 82 
>00000C21: 46 02 
      checkbox varid = MyIfrNVData.SerialPortStatus,
>00000C23: 06 8E 9F 00 30 00 21 00 34 12 C1 00 00 00 
        prompt = STRING_TOKEN(0x009F),
        help = STRING_TOKEN(0x0030),
      endcheckbox;
>00000C31: 29 02 
    endif;
>00000C33: 29 02 
    grayoutif TRUE;
>00000C35: 19 82 
>00000C37: 46 02 
      suppressif ideqval MyIfrNVData.SerialPortStatus == 0;
>00000C39: 0A 82 
>00000C3B: 12 06 21 00 00 00 
        oneof varid = MyIfrNVData.SerialPortIo,
>00000C41: 05 94 A0 00 26 00 22 00 34 12 C2 00 00 11 E8 02 F8 03 00 00 
          prompt = STRING_TOKEN(0x00A0),
          help = STRING_TOKEN(0x0026),
          option text = STRING_TOKEN(0x00A2), value = 0x3F8, flags = DEFAULT;
>00000C55: 09 08 A2 00 11 01 F8 03 
          option text = STRING_TOKEN(0x00A3), value = 0x2F8, flags = 0;
>00000C5D: 09 08 A3 00 01 01 F8 02 
          option text = STRING_TOKEN(0x00A4), value = 0x3E8, flags = 0;
>00000C65: 09 08 A4 00 01 01 E8 03 
          option text = STRING_TOKEN(0x00A5), value = 0x2E8, flags = 0;
>00000C6D: 09 08 A5 00 01 01 E8 02 
        endoneof;
>00000C75: 29 02 
      endif;
>00000C77: 29 02 
    endif;
>00000C79: 29 02 
    grayoutif TRUE;
>00000C7B: 19 82 
>00000C7D: 46 02 
      suppressif ideqval MyIfrNVData.SerialPortStatus == 0;
>00000C7F: 0A 82 
>00000C81: 12 06 21 00 00 00 
        oneof varid = MyIfrNVData.SerialPortIrq,
>00000C87: 05 91 A1 00 26 00 23 00 34 12 C4 00 00 10 03 04 00 
          prompt = STRING_TOKEN(0x00A1),
          help = STRING_TOKEN(0x0026),
          option text = STRING_TOKEN(0x00A6), value = 0x4, flags = DEFAULT;
>00000C98: 09 07 A6 00 10 00 04 
          option text = STRING_TOKEN(0x00A7), value = 0x3, flags = 0;
>00000C9F: 09 07 A7 00 00 00 03 
        endoneof;
>00000CA6: 29 02 
      endif;
>00000CA8: 29 02 
    endif;
>00000CAA: 29 02 
    goto 1,
>00000CAC: 0F 0F 3A 00 51 00 24 00 00 00 FF FF 00 01 00 
      prompt = STRING_TOKEN(0x003A),
      help = STRING_TOKEN(0x0051);
  endform;
>00000CBB: 29 02 
  form formid = 5,
>00000CBD: 01 86 05 00 66 00 
       title = STRING_TOKEN(0x0066);
    modal;
>00000CC3: 61 02 
    text
      help = STRING_TOKEN(0x0054),
      text = STRING_TOKEN(0x0054),
      flags = INTERACTIVE,
>00000CC5: 0C 8F 54 00 54 00 45 12 00 00 FF FF 04 00 00 
      key = 0x1245;
>00000CD4: 29 02 
    text
      help = STRING_TOKEN(0x0055),
      text = STRING_TOKEN(0x0055),
      flags = INTERACTIVE,
>00000CD6: 0C 8F 55 00 55 00 46 12 00 00 FF FF 04 00 00 
      key = 0x1246;
>00000CE5: 29 02 
  endform;
>00000CE7: 29 02 
  form formid = 6,
>00000CE9: 01 86 06 00 18 00 
       title = STRING_TOKEN(0x0018);
    text
>00000CEF: 03 08 64 00 64 00 00 00 
      help = STRING_TOKEN(0x0064),
      text = STRING_TOKEN(0x0064);
    numeric varid = MyIfrNVData.RefreshGuidCount,
>00000CF7: 07 91 65 00 35 00 47 12 34 12 CA 00 04 10 00 FF 00 
            prompt = STRING_TOKEN(0x0065),
            help = STRING_TOKEN(0x0035),
            flags = INTERACTIVE,
            key = 0x1247,
            minimum = 0,
            maximum = 0xff,
            step = 0,
            default = 0,
>00000D08: 5B 06 00 00 00 00 
            refreshguid = { 0xF5E655D9, 0x02A6, 0x46f2, {0x9E, 0x76, 0xB8, 0xBE, 0x8E, 0x60, 0xAB, 0x22} },
>00000D0E: 62 12 D9 55 E6 F5 A6 02 F2 46 9E 76 B8 BE 8E 60 AB 22 
    endnumeric;
>00000D20: 29 02 
    label 0x3234;
>00000D22: 5F 15 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 00 34 32 
    label 0x2223;
>00000D37: 5F 15 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 00 23 22 
  endform;
>00000D4C: 29 02 
  form formid = 0x1234,
>00000D4E: 01 86 34 12 19 00 
       title = STRING_TOKEN(0x0019);
    label 0x1234;
>00000D54: 5F 15 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 00 34 12 
    label 0x2223;
>00000D69: 5F 15 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 00 23 22 
  endform;
>00000D7E: 29 02 
  form formid = 7,
>00000D80: 01 86 07 00 75 00 
    title = STRING_TOKEN(0x0075);
    subtitle text = STRING_TOKEN(0x0078);
>00000D86: 02 87 78 00 00 00 00 
>00000D8D: 29 02 
    checkbox varid = MyEfiBitVar.BitsData.NestBitCheckbox,
>00000D8F: 5F 92 8B D6 DD 82 63 91 87 41 9B 27 20 A8 FD 60 A7 1D 
>00000DA1: 06 8E 7D 00 7E 00 25 00 02 00 11 00 00 01 
             prompt = STRING_TOKEN(0x007D),
             help = STRING_TOKEN(0x007E),
             flags = CHECKBOX_DEFAULT,
    endcheckbox;
>00000DAF: 29 02 
>00000DB1: 29 02 
    oneof varid = MyEfiBitVar.BitsData.NestBitOneof,
>00000DB3: 5F 92 8B D6 DD 82 63 91 87 41 9B 27 20 A8 FD 60 A7 1D 
>00000DC5: 05 9A 7F 00 80 00 26 00 02 00 12 00 00 42 00 00 00 00 01 00 00 00 00 00 00 00 
      prompt = STRING_TOKEN(0x007F),
      help = STRING_TOKEN(0x0080),
      option text = STRING_TOKEN(0x002D), value = 0, flags = MANUFACTURING;
>00000DDF: 09 0A 2D 00 20 02 00 00 00 00 
      option text = STRING_TOKEN(0x002E), value = 1, flags = DEFAULT;
>00000DE9: 09 0A 2E 00 10 02 01 00 00 00 
    endoneof;
>00000DF3: 29 02 
>00000DF5: 29 02 
    numeric varid = MyEfiBitVar.BitsData.NestBitNumeric,
>00000DF7: 5F 92 8B D6 DD 82 63 91 87 41 9B 27 20 A8 FD 60 A7 1D 
>00000E09: 07 9A 81 00 85 00 66 66 02 00 18 00 04 84 02 00 00 00 0F 00 00 00 01 00 00 00 
            questionid = 0x6666,
            prompt = STRING_TOKEN(0x0081),
            help = STRING_TOKEN(0x0085),
            flags = DISPLAY_UINT_HEX | INTERACTIVE,
            minimum = 2,
            maximum = 15,
            step = 1,
    endnumeric;
>00000E23: 29 02 
>00000E25: 29 02 
    oneof varid = MyEfiBitVar.BitsData.NestByteField,
>00000E27: 05 94 83 00 84 00 27 00 02 00 00 00 00 11 00 00 01 00 00 00 
      prompt = STRING_TOKEN(0x0083),
      help = STRING_TOKEN(0x0084),
      option text = STRING_TOKEN(0x002D), value = 0, flags = MANUFACTURING;
>00000E3B: 09 08 2D 00 21 01 00 00 
      option text = STRING_TOKEN(0x002E), value = 1, flags = DEFAULT;
>00000E43: 09 08 2E 00 11 01 01 00 
    endoneof;
>00000E4B: 29 02 
    subtitle text = STRING_TOKEN(0x001B);
>00000E4D: 02 87 1B 00 00 00 00 
>00000E54: 29 02 
    subtitle text = STRING_TOKEN(0x0079);
>00000E56: 02 87 79 00 00 00 00 
>00000E5D: 29 02 
    checkbox varid = MyEfiBitVar.EfiBitCheckbox,
>00000E5F: 5F 92 8B D6 DD 82 63 91 87 41 9B 27 20 A8 FD 60 A7 1D 
>00000E71: 06 8E 86 00 87 00 28 00 02 00 33 00 00 01 
      prompt = STRING_TOKEN(0x0086),
      help = STRING_TOKEN(0x0087),
      flags = CHECKBOX_DEFAULT,
    endcheckbox;
>00000E7F: 29 02 
>00000E81: 29 02 
  grayoutif ideqval MyEfiBitVar.EfiBitGrayoutTest == 0;
>00000E83: 19 82 
>00000E85: 12 06 32 00 00 00 
    numeric varid = MyEfiBitVar.EfiBitNumeric,
>00000E8B: 5F 92 8B D6 DD 82 63 91 87 41 9B 27 20 A8 FD 60 A7 1D 
>00000E9D: 07 9A 8A 00 8B 00 29 00 02 00 25 00 00 44 00 00 00 00 07 00 00 00 00 00 00 00 
            prompt = STRING_TOKEN(0x008A),
            help = STRING_TOKEN(0x008B),
            minimum = 0,
            maximum = 7,
            step = 0,
            default = 4, defaultstore = MyStandardDefault,
>00000EB7: 5B 09 00 00 02 04 00 00 00 
            default = 5, defaultstore = MyManufactureDefault,
>00000EC0: 5B 09 01 00 02 05 00 00 00 
    endnumeric;
>00000EC9: 29 02 
>00000ECB: 29 02 
  endif;
>00000ECD: 29 02 
      oneof varid = MyEfiBitVar.EfiBitOneof,
>00000ECF: 5F 92 8B D6 DD 82 63 91 87 41 9B 27 20 A8 FD 60 A7 1D 
>00000EE1: 05 9A 88 00 89 00 99 99 02 00 29 00 00 4A 00 00 00 00 01 00 00 00 00 00 00 00 
      questionid = 0x9999,
      prompt = STRING_TOKEN(0x0088),
      help = STRING_TOKEN(0x0089),
      option text = STRING_TOKEN(0x002D), value = 0x0, flags = MANUFACTURING;
>00000EFB: 09 0A 2D 00 22 02 00 00 00 00 
      option text = STRING_TOKEN(0x002E), value = 0x1, flags = DEFAULT;
>00000F05: 09 0A 2E 00 12 02 01 00 00 00 
    endoneof;
>00000F0F: 29 02 
>00000F11: 29 02 
    subtitle text = STRING_TOKEN(0x001B);
>00000F13: 02 87 1B 00 00 00 00 
>00000F1A: 29 02 
    subtitle text = STRING_TOKEN(0x007A);
>00000F1C: 02 87 7A 00 00 00 00 
>00000F23: 29 02 
    checkbox varid = MyIfrNVData.MyBitData.NestBitCheckbox,
>00000F25: 5F 92 8B D6 DD 82 63 91 87 41 9B 27 20 A8 FD 60 A7 1D 
>00000F37: 06 8E 7D 00 7E 00 2A 00 34 12 B1 06 00 01 
             prompt = STRING_TOKEN(0x007D),
             help = STRING_TOKEN(0x007E),
             flags = CHECKBOX_DEFAULT,
    endcheckbox;
>00000F45: 29 02 
>00000F47: 29 02 
    oneof varid = MyIfrNVData.MyBitData.NestBitOneof,
>00000F49: 5F 92 8B D6 DD 82 63 91 87 41 9B 27 20 A8 FD 60 A7 1D 
>00000F5B: 05 9A 7F 00 80 00 2B 00 34 12 B2 06 00 42 00 00 00 00 01 00 00 00 00 00 00 00 
      prompt = STRING_TOKEN(0x007F),
      help = STRING_TOKEN(0x0080),
      option text = STRING_TOKEN(0x002D), value = 0, flags = MANUFACTURING;
>00000F75: 09 0A 2D 00 20 02 00 00 00 00 
      option text = STRING_TOKEN(0x002E), value = 1, flags = DEFAULT;
>00000F7F: 09 0A 2E 00 10 02 01 00 00 00 
    endoneof;
>00000F89: 29 02 
>00000F8B: 29 02 
    numeric varid = MyIfrNVData.MyBitData.NestBitNumeric,
>00000F8D: 5F 92 8B D6 DD 82 63 91 87 41 9B 27 20 A8 FD 60 A7 1D 
>00000F9F: 07 9A 81 00 82 00 2C 00 34 12 B8 06 00 44 00 00 00 00 07 00 00 00 00 00 00 00 
            prompt = STRING_TOKEN(0x0081),
            help = STRING_TOKEN(0x0082),
            minimum = 0,
            maximum = 7,
            step = 0,
            default = 6, defaultstore = MyStandardDefault,
>00000FB9: 5B 09 00 00 02 06 00 00 00 
            default = 7, defaultstore = MyManufactureDefault,
>00000FC2: 5B 09 01 00 02 07 00 00 00 
    endnumeric;
>00000FCB: 29 02 
>00000FCD: 29 02 
    oneof varid = MyIfrNVData.MyBitData.NestByteField,
>00000FCF: 05 94 83 00 84 00 2D 00 34 12 D4 00 00 11 00 00 01 00 00 00 
      prompt = STRING_TOKEN(0x0083),
      help = STRING_TOKEN(0x0084),
      option text = STRING_TOKEN(0x002D), value = 0, flags = MANUFACTURING;
>00000FE3: 09 08 2D 00 21 01 00 00 
      option text = STRING_TOKEN(0x002E), value = 1, flags = DEFAULT;
>00000FEB: 09 08 2E 00 11 01 01 00 
    endoneof;
>00000FF3: 29 02 
    subtitle text = STRING_TOKEN(0x001B);
>00000FF5: 02 87 1B 00 00 00 00 
>00000FFC: 29 02 
    subtitle text = STRING_TOKEN(0x007B);
>00000FFE: 02 87 7B 00 00 00 00 
>00001005: 29 02 
    oneof varid = MyIfrNVData.BitOneof,
>00001007: 5F 92 8B D6 DD 82 63 91 87 41 9B 27 20 A8 FD 60 A7 1D 
>00001019: 05 9A 88 00 89 00 2E 00 34 12 80 06 00 46 00 00 00 00 01 00 00 00 00 00 00 00 
      prompt = STRING_TOKEN(0x0088),
      help = STRING_TOKEN(0x0089),
      option text = STRING_TOKEN(0x002D), value = 0, flags = MANUFACTURING;
>00001033: 09 0A 2D 00 21 02 00 00 00 00 
      option text = STRING_TOKEN(0x002E), value = 1, flags = DEFAULT;
>0000103D: 09 0A 2E 00 11 02 01 00 00 00 
    endoneof;
>00001047: 29 02 
>00001049: 29 02 
    checkbox varid = MyIfrNVData.BitCheckbox,
>0000104B: 5F 92 8B D6 DD 82 63 91 87 41 9B 27 20 A8 FD 60 A7 1D 
>0000105D: 06 8E 86 00 87 00 2F 00 34 12 78 06 00 01 
             prompt = STRING_TOKEN(0x0086),
             help = STRING_TOKEN(0x0087),
             flags = CHECKBOX_DEFAULT,
    endcheckbox;
>0000106B: 29 02 
>0000106D: 29 02 
    numeric varid = MyIfrNVData.BitNumeric,
>0000106F: 5F 92 8B D6 DD 82 63 91 87 41 9B 27 20 A8 FD 60 A7 1D 
>00001081: 07 9A 8A 00 8C 00 30 00 34 12 90 06 00 4C 00 00 00 00 14 00 00 00 00 00 00 00 
            prompt = STRING_TOKEN(0x008A),
            help = STRING_TOKEN(0x008C),
            minimum = 0,
            maximum = 20,
            step = 0,
            default = 16, defaultstore = MyStandardDefault,
>0000109B: 5B 09 00 00 02 10 00 00 00 
            default = 17, defaultstore = MyManufactureDefault,
>000010A4: 5B 09 01 00 02 11 00 00 00 
    endnumeric;
>000010AD: 29 02 
>000010AF: 29 02 
    subtitle text = STRING_TOKEN(0x001B);
>000010B1: 02 87 1B 00 00 00 00 
>000010B8: 29 02 
    subtitle text = STRING_TOKEN(0x007C);
>000010BA: 02 87 7C 00 00 00 00 
>000010C1: 29 02 
    numeric varid = MyEfiUnionVar.UnionNumeric,
>000010C3: 07 91 8D 00 8E 00 31 00 03 00 00 00 00 10 00 14 00 
            prompt = STRING_TOKEN(0x008D),
            help = STRING_TOKEN(0x008E),
            minimum = 0,
            maximum = 20,
            step = 0,
            default = 7, defaultstore = MyStandardDefault,
>000010D4: 5B 06 00 00 00 07 
            default = 8, defaultstore = MyManufactureDefault,
>000010DA: 5B 06 01 00 00 08 
    endnumeric;
>000010E0: 29 02 
    guidop
>000010E2: 5F 9A F4 27 4A A0 00 DF 42 4D B5 52 39 51 13 02 11 3D 00 00 00 00 20 02 08 00 
      guid = { 0xA04A27f4, 0xDF00, 0x4D42, {0xB5, 0x52, 0x39, 0x51, 0x13, 0x02, 0x11, 0x3D} },
      datatype = MY_EFI_BITS_VARSTORE_DATA,
        data.EfiBitNumeric = 1,
        data.EfiBitOneof = 1,
        data.EfiBitCheckbox = 1,
    endguidop;
>000010FC: 29 02 
  endform;
>00001134: 29 02 
endformset;
>000010FE: 1E 82 
>00001100: 46 02 
>00001102: 5F 92 8B D6 DD 82 63 91 87 41 9B 27 20 A8 FD 60 A7 1D 
>00001114: 07 9A 00 00 00 00 32 00 02 00 20 00 00 45 00 00 00 00 1F 00 00 00 00 00 00 00 
>0000112E: 29 02 
>00001130: 29 02 
>00001132: 29 02 
>00001136: 29 02 

//
// All Opcode Record List 
//
>00000000: 0E A7 F4 27 4A A0 00 DF 42 4D B5 52 39 51 13 02 11 3D 13 00 14 00 01 71 99 03 93 45 85 04 4B B4 5E 32 EB 83 26 04 0E 
>00000027: 5C 06 5B 00 00 00 
>0000002D: 5C 06 5D 00 01 00 
>00000033: 24 22 F4 27 4A A0 00 DF 42 4D B5 52 39 51 13 02 11 3D 34 12 DC 00 4D 79 49 66 72 4E 56 44 61 74 61 00 
>00000055: 26 23 01 00 F4 27 4A A0 00 DF 42 4D B5 52 39 51 13 02 11 3D 03 00 00 00 08 00 4D 79 45 66 69 56 61 72 00 
>00000078: 26 26 02 00 F4 27 4A A0 00 DF 42 4D B5 52 39 51 13 02 11 3D 03 00 00 00 08 00 4D 79 45 66 69 42 69 74 56 61 72 00 
>0000009E: 26 28 03 00 F4 27 4A A0 00 DF 42 4D B5 52 39 51 13 02 11 3D 03 00 00 00 01 00 4D 79 45 66 69 55 6E 69 6F 6E 56 61 72 00 
>000000C6: 25 14 04 00 F4 27 4A A0 00 DF 42 4D B5 52 39 51 13 02 11 3D 
>000000DA: 01 86 01 00 15 00 
>000000E0: 02 87 1A 00 00 00 00 
>000000E7: 29 02 
>000000E9: 02 87 1B 00 00 00 00 
>000000F0: 29 02 
>000000F2: 03 08 1C 00 50 00 1D 00 
>000000FA: 0C 8F 54 00 54 00 37 12 00 00 FF FF 04 00 00 
>00000109: 29 02 
>0000010B: 0C 8F 55 00 55 00 38 12 00 00 FF FF 04 00 00 
>0000011A: 29 02 
>0000011C: 0C 8F 57 00 57 00 43 12 00 00 FF FF 04 00 00 
>0000012B: 29 02 
>0000012D: 0C 8F 58 00 58 00 44 12 00 00 FF FF 04 00 00 
>0000013C: 29 02 
>0000013E: 05 91 1F 00 26 00 01 00 34 12 5D 00 00 10 00 02 00 
>0000014F: 09 07 2A 00 00 00 00 
>00000156: 09 07 2B 00 00 00 01 
>0000015D: 09 07 2C 00 10 00 02 
>00000164: 29 02 
>00000166: 05 91 1F 00 26 00 02 00 34 12 76 00 00 10 00 01 00 
>00000177: 5B 85 00 00 08 
>0000017C: 5A 82 
>0000017E: 58 82 
>00000180: 45 0A 00 00 00 00 00 00 00 00 
>0000018A: 2F 02 
>0000018C: 45 0A 00 00 00 00 00 00 00 00 
>00000196: 40 04 01 00 
>0000019A: 45 0A 04 00 00 00 00 00 00 00 
>000001A4: 39 02 
>000001A6: 45 0A 00 0F 00 00 00 00 00 00 
>000001B0: 35 02 
>000001B2: 45 0A 00 00 00 00 00 00 00 00 
>000001BC: 45 0A 02 00 00 00 00 00 00 00 
>000001C6: 3A 02 
>000001C8: 2F 02 
>000001CA: 45 0A 00 00 00 00 00 00 00 00 
>000001D4: 45 0A 01 00 00 00 00 00 00 00 
>000001DE: 50 02 
>000001E0: 50 02 
>000001E2: 29 02 
>000001E4: 29 02 
>000001E6: 29 02 
>000001E8: 09 07 2D 00 00 00 00 
>000001EF: 09 07 2E 00 00 00 01 
>000001F6: 29 02 
>000001F8: 19 82 
>000001FA: 12 06 01 00 01 00 
>00000200: 0A 82 
>00000202: 40 84 01 00 
>00000206: 45 0A 00 00 00 00 00 00 00 00 
>00000210: 2F 02 
>00000212: 29 02 
>00000214: 06 8E 2F 00 30 00 03 00 34 12 5C 00 00 03 
>00000222: 5B 06 00 00 00 01 
>00000228: 29 02 
>0000022A: 29 02 
>0000022C: 29 02 
>0000022E: 0A 82 
>00000230: 12 06 01 00 00 00 
>00000236: 5F 15 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 00 22 22 
>0000024B: 23 8F 8F 00 5A 00 04 00 34 12 66 00 10 08 00 
>0000025A: 09 08 91 00 01 01 02 00 
>00000262: 09 08 90 00 01 01 01 00 
>0000026A: 09 08 92 00 01 01 03 00 
>00000272: 0A 82 
>00000274: 12 06 02 00 00 00 
>0000027A: 09 08 93 00 01 01 04 00 
>00000282: 29 02 
>00000284: 29 02 
>00000286: 5F 15 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 00 23 22 
>0000029B: 29 02 
>0000029D: 1E 82 
>0000029F: 12 06 01 00 02 00 
>000002A5: 23 8F 52 00 50 00 05 00 34 12 5E 00 10 08 00 
>000002B4: 09 07 27 00 00 00 03 
>000002BB: 09 07 28 00 00 00 02 
>000002C2: 09 07 29 00 00 00 01 
>000002C9: 5B 08 00 00 0B 01 02 03 
>000002D1: 29 02 
>000002D3: 29 02 
>000002D5: 5F 15 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 00 64 00 
>000002EA: 0F 0F 41 00 51 00 34 12 00 00 FF FF 04 34 12 
>000002F9: 0F 0F 42 00 51 00 35 12 00 00 FF FF 04 34 12 
>00000308: 05 91 52 00 26 00 06 00 34 12 59 00 10 10 00 01 00 
>00000319: 09 07 27 00 00 00 00 
>00000320: 09 07 28 00 10 00 01 
>00000327: 63 85 AE 00 05 
>0000032C: 12 06 06 00 00 00 
>00000332: 29 02 
>00000334: 29 02 
>00000336: 05 91 53 00 26 00 07 00 34 12 5A 00 10 10 00 01 00 
>00000347: 09 07 27 00 10 00 00 
>0000034E: 09 07 28 00 00 00 01 
>00000355: 11 84 47 00 
>00000359: 13 06 06 00 07 00 
>0000035F: 29 02 
>00000361: 29 02 
>00000363: 05 91 20 00 26 00 08 00 34 12 5B 00 10 10 00 03 00 
>00000374: 09 07 27 00 00 00 00 
>0000037B: 09 07 28 00 10 00 01 
>00000382: 09 07 29 00 00 00 03 
>00000389: 29 02 
>0000038B: 05 91 22 00 23 00 09 00 34 12 D9 00 30 10 00 03 00 
>0000039C: 09 07 27 00 00 00 00 
>000003A3: 09 07 28 00 10 00 01 
>000003AA: 09 07 29 00 00 00 03 
>000003B1: 29 02 
>000003B3: 07 91 24 00 25 00 0A 00 34 12 DA 00 30 10 00 F0 00 
>000003C4: 5B 06 00 00 00 00 
>000003CA: 29 02 
>000003CC: 1C 90 48 00 49 00 36 12 34 12 00 00 04 06 28 00 
>000003DC: 11 84 63 00 
>000003E0: 58 82 
>000003E2: 4E 04 62 00 
>000003E6: 30 02 
>000003E8: 29 02 
>000003EA: 29 02 
>000003EC: 29 02 
>000003EE: 07 91 32 00 35 00 0B 00 34 12 52 00 01 10 00 F0 00 
>000003FF: 5B 06 00 00 00 15 
>00000405: 29 02 
>00000407: 07 91 33 00 35 00 0C 00 34 12 52 00 00 10 00 F0 00 
>00000418: 5B 85 00 00 08 
>0000041D: 5A 82 
>0000041F: 45 8A 11 11 00 00 00 00 00 00 
>00000429: 51 14 6D 00 F4 27 4A A0 00 DF 42 4D B5 52 39 51 13 02 11 3D 
>0000043D: 29 02 
>0000043F: 29 02 
>00000441: 29 02 
>00000443: 11 84 47 00 
>00000447: 12 86 0C 00 63 00 
>0000044D: 13 06 0C 00 11 11 
>00000453: 16 02 
>00000455: 14 0E 0C 00 04 00 01 00 03 00 05 00 07 00 
>00000463: 16 02 
>00000465: 29 02 
>00000467: 29 02 
>00000469: 29 02 
>0000046B: 07 91 34 00 36 00 11 11 01 00 00 00 04 20 00 FA 00 
>0000047C: 5B 06 00 00 00 12 
>00000482: 5B 06 01 00 00 13 
>00000488: 29 02 
>0000048A: 07 91 94 00 5F 00 0D 00 04 00 94 00 00 10 00 FF 00 
>0000049B: 0B 02 
>0000049D: 5B 06 00 00 00 10 
>000004A3: 5B 06 01 00 00 11 
>000004A9: 29 02 
>000004AB: 07 94 95 00 60 00 0E 00 04 00 95 00 00 11 00 00 FF FF 00 00 
>000004BF: 5B 07 00 00 01 12 00 
>000004C6: 5B 07 01 00 01 13 00 
>000004CD: 29 02 
>000004CF: 1C 90 96 00 61 00 0F 00 04 00 96 00 00 02 14 00 
>000004DF: 29 02 
>000004E1: 05 94 1F 00 1E 00 10 00 01 00 01 00 00 11 00 00 01 00 00 00 
>000004F5: 09 08 2D 00 01 01 00 00 
>000004FD: 09 08 2E 00 11 01 01 00 
>00000505: 29 02 
>00000507: 5F 15 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 00 01 00 
>0000051C: 5F 15 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 00 00 10 
>00000531: 19 82 
>00000533: 12 86 0C 00 17 00 
>00000539: 12 06 01 00 01 00 
>0000053F: 15 02 
>00000541: 29 02 
>00000543: 07 91 31 00 37 00 11 00 34 12 55 00 00 10 00 F3 01 
>00000554: 5B 06 00 00 00 12 
>0000055A: 5B 06 01 00 00 13 
>00000560: 29 02 
>00000562: 29 02 
>00000564: 07 91 69 00 6A 00 39 12 34 12 C6 00 04 20 00 FF 01 
>00000575: 5B 06 00 00 00 12 
>0000057B: 29 02 
>0000057D: 07 91 67 00 68 00 40 12 34 12 C5 00 04 20 00 FF 01 
>0000058E: 5B 06 00 00 00 12 
>00000594: 29 02 
>00000596: 23 8F 67 00 68 00 52 12 34 12 CC 00 04 03 00 
>000005A5: 09 07 27 00 00 00 01 
>000005AC: 09 07 28 00 00 00 02 
>000005B3: 09 07 29 00 00 00 03 
>000005BA: 29 02 
>000005BC: 0D 88 5B 00 5C 00 00 00 
>000005C4: 29 02 
>000005C6: 0D 88 5D 00 5E 00 01 00 
>000005CE: 29 02 
>000005D0: 19 82 
>000005D2: 60 92 07 56 B7 85 CE F7 1E 47 B7 E4 2A EA 5F 72 32 EE 
>000005E4: 17 02 
>000005E6: 29 02 
>000005E8: 03 08 38 00 39 00 00 00 
>000005F0: 29 02 
>000005F2: 07 94 6E 00 6F 00 50 12 01 00 06 00 04 11 00 00 FF 00 00 00 
>00000606: 5B 07 00 00 01 12 00 
>0000060D: 29 02 
>0000060F: 07 91 70 00 71 00 53 12 34 12 DB 00 04 10 00 FF 00 
>00000620: 5B 06 00 00 00 13 
>00000626: 29 02 
>00000628: 0C 8F 72 00 73 00 30 13 00 00 FF FF 04 00 00 
>00000637: 29 02 
>00000639: 0F 0F 3B 00 51 00 12 00 00 00 FF FF 00 02 00 
>00000648: 0F 0F 3C 00 51 00 13 00 00 00 FF FF 00 03 00 
>00000657: 0F 0F 3D 00 51 00 14 00 00 00 FF FF 00 04 00 
>00000666: 0F 0F 3F 00 40 00 15 00 00 00 FF FF 00 05 00 
>00000675: 0F 0F 3E 00 51 00 16 00 00 00 FF FF 00 06 00 
>00000684: 0F 21 6B 00 6C 00 17 00 00 00 FF FF 00 01 00 01 00 70 64 F5 B3 41 61 21 46 8F 19 70 4E 57 7A A9 E8 
>000006A5: 5F 9A F4 27 4A A0 00 DF 42 4D B5 52 39 51 13 02 11 3D 21 21 21 21 00 00 00 00 
>000006BF: 29 02 
>000006C1: 0F 0F 76 00 77 00 18 00 00 00 FF FF 00 07 00 
>000006D0: 29 02 
>000006D2: 0A 82 
>000006D4: 12 06 02 00 00 00 
>000006DA: 01 86 02 00 16 00 
>000006E0: 1A 8E 4C 00 4D 00 19 00 00 00 FF FF 00 10 
>000006EE: 5B 09 00 00 06 D4 07 01 01 
>000006F7: 11 84 47 00 
>000006FB: 40 84 19 00 
>000006FF: 44 06 00 00 00 FF 
>00000705: 35 02 
>00000707: 42 03 18 
>0000070A: 39 02 
>0000070C: 42 03 1F 
>0000070F: 2F 02 
>00000711: 40 04 19 00 
>00000715: 44 06 00 00 FF 00 
>0000071B: 35 02 
>0000071D: 42 03 10 
>00000720: 39 02 
>00000722: 42 03 02 
>00000725: 2F 02 
>00000727: 40 04 19 00 
>0000072B: 44 06 00 00 FF 00 
>00000731: 35 02 
>00000733: 42 03 10 
>00000736: 39 02 
>00000738: 42 03 04 
>0000073B: 2F 02 
>0000073D: 16 02 
>0000073F: 40 04 19 00 
>00000743: 44 06 00 00 FF 00 
>00000749: 35 02 
>0000074B: 42 03 10 
>0000074E: 39 02 
>00000750: 42 03 06 
>00000753: 2F 02 
>00000755: 16 02 
>00000757: 40 04 19 00 
>0000075B: 44 06 00 00 FF 00 
>00000761: 35 02 
>00000763: 42 03 10 
>00000766: 39 02 
>00000768: 42 03 09 
>0000076B: 2F 02 
>0000076D: 16 02 
>0000076F: 40 04 19 00 
>00000773: 44 06 00 00 FF 00 
>00000779: 35 02 
>0000077B: 42 03 10 
>0000077E: 39 02 
>00000780: 42 03 0B 
>00000783: 2F 02 
>00000785: 16 02 
>00000787: 15 02 
>00000789: 29 02 
>0000078B: 29 02 
>0000078D: 11 84 47 00 
>00000791: 40 84 19 00 
>00000795: 44 06 00 00 00 FF 
>0000079B: 35 02 
>0000079D: 42 03 18 
>000007A0: 39 02 
>000007A2: 42 03 1E 
>000007A5: 2F 02 
>000007A7: 40 04 19 00 
>000007AB: 44 06 00 00 FF 00 
>000007B1: 35 02 
>000007B3: 42 03 10 
>000007B6: 39 02 
>000007B8: 42 03 02 
>000007BB: 2F 02 
>000007BD: 15 02 
>000007BF: 29 02 
>000007C1: 29 02 
>000007C3: 11 84 47 00 
>000007C7: 40 84 19 00 
>000007CB: 44 06 00 00 00 FF 
>000007D1: 35 02 
>000007D3: 42 03 18 
>000007D6: 39 02 
>000007D8: 42 03 1D 
>000007DB: 2F 02 
>000007DD: 40 04 19 00 
>000007E1: 44 06 00 00 FF 00 
>000007E7: 35 02 
>000007E9: 42 03 10 
>000007EC: 39 02 
>000007EE: 42 03 02 
>000007F1: 2F 02 
>000007F3: 15 02 
>000007F5: 40 04 19 00 
>000007F9: 44 06 FF FF 00 00 
>000007FF: 35 02 
>00000801: 42 03 00 
>00000804: 39 02 
>00000806: 43 04 D4 07 
>0000080A: 2F 02 
>0000080C: 40 04 19 00 
>00000810: 44 06 FF FF 00 00 
>00000816: 35 02 
>00000818: 42 03 00 
>0000081B: 39 02 
>0000081D: 43 04 D8 07 
>00000821: 2F 02 
>00000823: 16 02 
>00000825: 40 04 19 00 
>00000829: 44 06 FF FF 00 00 
>0000082F: 35 02 
>00000831: 42 03 00 
>00000834: 39 02 
>00000836: 43 04 2C 4E 
>0000083A: 2F 02 
>0000083C: 16 02 
>0000083E: 40 04 19 00 
>00000842: 44 06 FF FF 00 00 
>00000848: 35 02 
>0000084A: 42 03 00 
>0000084D: 39 02 
>0000084F: 43 04 30 4E 
>00000853: 2F 02 
>00000855: 16 02 
>00000857: 40 04 19 00 
>0000085B: 44 06 FF FF 00 00 
>00000861: 35 02 
>00000863: 42 03 00 
>00000866: 39 02 
>00000868: 43 04 E4 07 
>0000086C: 2F 02 
>0000086E: 16 02 
>00000870: 40 04 19 00 
>00000874: 44 06 FF FF 00 00 
>0000087A: 35 02 
>0000087C: 42 03 00 
>0000087F: 39 02 
>00000881: 43 04 E8 07 
>00000885: 2F 02 
>00000887: 16 02 
>00000889: 40 04 19 00 
>0000088D: 44 06 FF FF 00 00 
>00000893: 35 02 
>00000895: 42 03 00 
>00000898: 39 02 
>0000089A: 43 04 EC 07 
>0000089E: 2F 02 
>000008A0: 16 02 
>000008A2: 40 04 19 00 
>000008A6: 44 06 FF FF 00 00 
>000008AC: 35 02 
>000008AE: 42 03 00 
>000008B1: 39 02 
>000008B3: 43 04 F0 07 
>000008B7: 2F 02 
>000008B9: 16 02 
>000008BB: 40 04 19 00 
>000008BF: 44 06 FF FF 00 00 
>000008C5: 35 02 
>000008C7: 42 03 00 
>000008CA: 39 02 
>000008CC: 43 04 F4 07 
>000008D0: 2F 02 
>000008D2: 16 02 
>000008D4: 17 02 
>000008D6: 15 02 
>000008D8: 29 02 
>000008DA: 29 02 
>000008DC: 29 02 
>000008DE: 0C 8F 59 00 59 00 41 12 00 00 FF FF 04 00 00 
>000008ED: 29 02 
>000008EF: 0C 8F 56 00 56 00 42 12 00 00 FF FF 04 00 00 
>000008FE: 29 02 
>00000900: 1B 8E 4E 00 4F 00 1A 00 00 00 FF FF 00 10 
>0000090E: 29 02 
>00000910: 1B 8E 4E 00 4E 00 1B 00 34 12 C7 00 00 04 
>0000091E: 5B 08 00 00 05 0F 21 21 
>00000926: 29 02 
>00000928: 06 8E 2F 00 30 00 1C 00 34 12 5C 00 00 01 
>00000936: 29 02 
>00000938: 03 08 4A 00 50 00 00 00 
>00000940: 03 08 4A 00 50 00 4B 00 
>00000948: 0F 0F 3A 00 51 00 1D 00 00 00 FF FF 00 01 00 
>00000957: 0F 8D 43 00 45 00 48 12 34 12 7F 00 04 
>00000964: 5B 1B 00 00 0C 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 5A 00 
>0000097F: 29 02 
>00000981: 0F 0D 44 00 46 00 49 12 00 00 FF FF 04 
>0000098E: 29 02 
>00000990: 29 02 
>00000992: 01 86 03 00 17 00 
>00000998: 0A 82 
>0000099A: 12 06 11 11 6F 00 
>000009A0: 03 08 4A 00 50 00 00 00 
>000009A8: 29 02 
>000009AA: 0F 0F 3A 00 51 00 1E 00 00 00 FF FF 00 01 00 
>000009B9: 07 91 33 00 35 00 78 56 34 12 77 00 04 10 00 FF 00 
>000009CA: 5B 06 00 00 00 00 
>000009D0: 1D 03 03 
>000009D3: 29 02 
>000009D5: 19 82 
>000009D7: 4E 84 B2 00 
>000009DB: 4E 04 B1 00 
>000009DF: 64 12 51 0A E6 63 7D 49 27 D4 C4 A5 B8 AB DC 3A AE B6 
>000009F1: 29 02 
>000009F3: 07 91 AF 00 B0 00 1F 00 34 12 CB 00 00 10 00 F3 00 
>00000A04: 29 02 
>00000A06: 29 02 
>00000A08: 5F 15 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 00 34 22 
>00000A1D: 5F 15 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 00 23 22 
>00000A32: 29 02 
>00000A34: 5D A8 04 00 97 00 F4 27 4A A0 00 DF 42 4D B5 52 39 51 13 02 11 3D 98 00 EC F4 D2 3B 24 E5 E4 46 A9 D8 51 01 17 42 55 62 
>00000A5C: 05 91 99 00 26 00 20 00 34 12 C0 00 00 10 00 04 00 
>00000A6D: 2D 02 
>00000A6F: 2B 87 34 12 C1 00 00 
>00000A76: 45 0A 00 00 00 00 00 00 00 00 
>00000A80: 30 02 
>00000A82: 45 0A 00 00 00 00 00 00 00 00 
>00000A8C: 2B 07 34 12 C2 00 01 
>00000A93: 45 0A 00 0F 00 00 00 00 00 00 
>00000A9D: 35 02 
>00000A9F: 45 0A 08 00 00 00 00 00 00 00 
>00000AA9: 39 02 
>00000AAB: 2B 07 34 12 C4 00 00 
>00000AB2: 45 0A 01 00 00 00 00 00 00 00 
>00000ABC: 3B 02 
>00000ABE: 2F 02 
>00000AC0: 55 02 
>00000AC2: 2B 07 34 12 C2 00 01 
>00000AC9: 22 82 
>00000ACB: 45 0A F8 03 00 00 00 00 00 00 
>00000AD5: 45 0A 01 00 00 00 00 00 00 00 
>00000ADF: 45 0A F8 02 00 00 00 00 00 00 
>00000AE9: 45 0A 02 00 00 00 00 00 00 00 
>00000AF3: 45 0A E8 03 00 00 00 00 00 00 
>00000AFD: 45 0A 03 00 00 00 00 00 00 00 
>00000B07: 45 0A E8 02 00 00 00 00 00 00 
>00000B11: 45 0A 04 00 00 00 00 00 00 00 
>00000B1B: 29 02 
>00000B1D: 50 02 
>00000B1F: 50 02 
>00000B21: 29 02 
>00000B23: 2E 02 
>00000B25: 58 82 
>00000B27: 45 0A 00 00 00 00 00 00 00 00 
>00000B31: 30 02 
>00000B33: 2C 07 34 12 C1 00 00 
>00000B3A: 58 02 
>00000B3C: 22 82 
>00000B3E: 45 0A 01 00 00 00 00 00 00 00 
>00000B48: 45 0A F8 03 00 00 00 00 00 00 
>00000B52: 45 0A 02 00 00 00 00 00 00 00 
>00000B5C: 45 0A F8 02 00 00 00 00 00 00 
>00000B66: 45 0A 03 00 00 00 00 00 00 00 
>00000B70: 45 0A E8 03 00 00 00 00 00 00 
>00000B7A: 45 0A 04 00 00 00 00 00 00 00 
>00000B84: 45 0A E8 02 00 00 00 00 00 00 
>00000B8E: 29 02 
>00000B90: 2C 07 34 12 C2 00 01 
>00000B97: 15 02 
>00000B99: 58 02 
>00000B9B: 22 82 
>00000B9D: 45 0A 01 00 00 00 00 00 00 00 
>00000BA7: 45 0A 04 00 00 00 00 00 00 00 
>00000BB1: 45 0A 02 00 00 00 00 00 00 00 
>00000BBB: 45 0A 03 00 00 00 00 00 00 00 
>00000BC5: 45 0A 03 00 00 00 00 00 00 00 
>00000BCF: 45 0A 04 00 00 00 00 00 00 00 
>00000BD9: 45 0A 04 00 00 00 00 00 00 00 
>00000BE3: 45 0A 03 00 00 00 00 00 00 00 
>00000BED: 29 02 
>00000BEF: 2C 07 34 12 C4 00 00 
>00000BF6: 15 02 
>00000BF8: 29 02 
>00000BFA: 09 07 9A 00 10 00 00 
>00000C01: 09 07 9B 00 00 00 01 
>00000C08: 09 07 9C 00 00 00 02 
>00000C0F: 09 07 9D 00 00 00 03 
>00000C16: 09 07 9E 00 00 00 04 
>00000C1D: 29 02 
>00000C1F: 19 82 
>00000C21: 46 02 
>00000C23: 06 8E 9F 00 30 00 21 00 34 12 C1 00 00 00 
>00000C31: 29 02 
>00000C33: 29 02 
>00000C35: 19 82 
>00000C37: 46 02 
>00000C39: 0A 82 
>00000C3B: 12 06 21 00 00 00 
>00000C41: 05 94 A0 00 26 00 22 00 34 12 C2 00 00 11 E8 02 F8 03 00 00 
>00000C55: 09 08 A2 00 11 01 F8 03 
>00000C5D: 09 08 A3 00 01 01 F8 02 
>00000C65: 09 08 A4 00 01 01 E8 03 
>00000C6D: 09 08 A5 00 01 01 E8 02 
>00000C75: 29 02 
>00000C77: 29 02 
>00000C79: 29 02 
>00000C7B: 19 82 
>00000C7D: 46 02 
>00000C7F: 0A 82 
>00000C81: 12 06 21 00 00 00 
>00000C87: 05 91 A1 00 26 00 23 00 34 12 C4 00 00 10 03 04 00 
>00000C98: 09 07 A6 00 10 00 04 
>00000C9F: 09 07 A7 00 00 00 03 
>00000CA6: 29 02 
>00000CA8: 29 02 
>00000CAA: 29 02 
>00000CAC: 0F 0F 3A 00 51 00 24 00 00 00 FF FF 00 01 00 
>00000CBB: 29 02 
>00000CBD: 01 86 05 00 66 00 
>00000CC3: 61 02 
>00000CC5: 0C 8F 54 00 54 00 45 12 00 00 FF FF 04 00 00 
>00000CD4: 29 02 
>00000CD6: 0C 8F 55 00 55 00 46 12 00 00 FF FF 04 00 00 
>00000CE5: 29 02 
>00000CE7: 29 02 
>00000CE9: 01 86 06 00 18 00 
>00000CEF: 03 08 64 00 64 00 00 00 
>00000CF7: 07 91 65 00 35 00 47 12 34 12 CA 00 04 10 00 FF 00 
>00000D08: 5B 06 00 00 00 00 
>00000D0E: 62 12 D9 55 E6 F5 A6 02 F2 46 9E 76 B8 BE 8E 60 AB 22 
>00000D20: 29 02 
>00000D22: 5F 15 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 00 34 32 
>00000D37: 5F 15 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 00 23 22 
>00000D4C: 29 02 
>00000D4E: 01 86 34 12 19 00 
>00000D54: 5F 15 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 00 34 12 
>00000D69: 5F 15 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 00 23 22 
>00000D7E: 29 02 
>00000D80: 01 86 07 00 75 00 
>00000D86: 02 87 78 00 00 00 00 
>00000D8D: 29 02 
>00000D8F: 5F 92 8B D6 DD 82 63 91 87 41 9B 27 20 A8 FD 60 A7 1D 
>00000DA1: 06 8E 7D 00 7E 00 25 00 02 00 11 00 00 01 
>00000DAF: 29 02 
>00000DB1: 29 02 
>00000DB3: 5F 92 8B D6 DD 82 63 91 87 41 9B 27 20 A8 FD 60 A7 1D 
>00000DC5: 05 9A 7F 00 80 00 26 00 02 00 12 00 00 42 00 00 00 00 01 00 00 00 00 00 00 00 
>00000DDF: 09 0A 2D 00 20 02 00 00 00 00 
>00000DE9: 09 0A 2E 00 10 02 01 00 00 00 
>00000DF3: 29 02 
>00000DF5: 29 02 
>00000DF7: 5F 92 8B D6 DD 82 63 91 87 41 9B 27 20 A8 FD 60 A7 1D 
>00000E09: 07 9A 81 00 85 00 66 66 02 00 18 00 04 84 02 00 00 00 0F 00 00 00 01 00 00 00 
>00000E23: 29 02 
>00000E25: 29 02 
>00000E27: 05 94 83 00 84 00 27 00 02 00 00 00 00 11 00 00 01 00 00 00 
>00000E3B: 09 08 2D 00 21 01 00 00 
>00000E43: 09 08 2E 00 11 01 01 00 
>00000E4B: 29 02 
>00000E4D: 02 87 1B 00 00 00 00 
>00000E54: 29 02 
>00000E56: 02 87 79 00 00 00 00 
>00000E5D: 29 02 
>00000E5F: 5F 92 8B D6 DD 82 63 91 87 41 9B 27 20 A8 FD 60 A7 1D 
>00000E71: 06 8E 86 00 87 00 28 00 02 00 33 00 00 01 
>00000E7F: 29 02 
>00000E81: 29 02 
>00000E83: 19 82 
>00000E85: 12 06 32 00 00 00 
>00000E8B: 5F 92 8B D6 DD 82 63 91 87 41 9B 27 20 A8 FD 60 A7 1D 
>00000E9D: 07 9A 8A 00 8B 00 29 00 02 00 25 00 00 44 00 00 00 00 07 00 00 00 00 00 00 00 
>00000EB7: 5B 09 00 00 02 04 00 00 00 
>00000EC0: 5B 09 01 00 02 05 00 00 00 
>00000EC9: 29 02 
>00000ECB: 29 02 
>00000ECD: 29 02 
>00000ECF: 5F 92 8B D6 DD 82 63 91 87 41 9B 27 20 A8 FD 60 A7 1D 
>00000EE1: 05 9A 88 00 89 00 99 99 02 00 29 00 00 4A 00 00 00 00 01 00 00 00 00 00 00 00 
>00000EFB: 09 0A 2D 00 22 02 00 00 00 00 
>00000F05: 09 0A 2E 00 12 02 01 00 00 00 
>00000F0F: 29 02 
>00000F11: 29 02 
>00000F13: 02 87 1B 00 00 00 00 
>00000F1A: 29 02 
>00000F1C: 02 87 7A 00 00 00 00 
>00000F23: 29 02 
>00000F25: 5F 92 8B D6 DD 82 63 91 87 41 9B 27 20 A8 FD 60 A7 1D 
>00000F37: 06 8E 7D 00 7E 00 2A 00 34 12 B1 06 00 01 
>00000F45: 29 02 
>00000F47: 29 02 
>00000F49: 5F 92 8B D6 DD 82 63 91 87 41 9B 27 20 A8 FD 60 A7 1D 
>00000F5B: 05 9A 7F 00 80 00 2B 00 34 12 B2 06 00 42 00 00 00 00 01 00 00 00 00 00 00 00 
>00000F75: 09 0A 2D 00 20 02 00 00 00 00 
>00000F7F: 09 0A 2E 00 10 02 01 00 00 00 
>00000F89: 29 02 
>00000F8B: 29 02 
>00000F8D: 5F 92 8B D6 DD 82 63 91 87 41 9B 27 20 A8 FD 60 A7 1D 
>00000F9F: 07 9A 81 00 82 00 2C 00 34 12 B8 06 00 44 00 00 00 00 07 00 00 00 00 00 00 00 
>00000FB9: 5B 09 00 00 02 06 00 00 00 
>00000FC2: 5B 09 01 00 02 07 00 00 00 
>00000FCB: 29 02 
>00000FCD: 29 02 
>00000FCF: 05 94 83 00 84 00 2D 00 34 12 D4 00 00 11 00 00 01 00 00 00 
>00000FE3: 09 08 2D 00 21 01 00 00 
>00000FEB: 09 08 2E 00 11 01 01 00 
>00000FF3: 29 02 
>00000FF5: 02 87 1B 00 00 00 00 
>00000FFC: 29 02 
>00000FFE: 02 87 7B 00 00 00 00 
>00001005: 29 02 
>00001007: 5F 92 8B D6 DD 82 63 91 87 41 9B 27 20 A8 FD 60 A7 1D 
>00001019: 05 9A 88 00 89 00 2E 00 34 12 80 06 00 46 00 00 00 00 01 00 00 00 00 00 00 00 
>00001033: 09 0A 2D 00 21 02 00 00 00 00 
>0000103D: 09 0A 2E 00 11 02 01 00 00 00 
>00001047: 29 02 
>00001049: 29 02 
>0000104B: 5F 92 8B D6 DD 82 63 91 87 41 9B 27 20 A8 FD 60 A7 1D 
>0000105D: 06 8E 86 00 87 00 2F 00 34 12 78 06 00 01 
>0000106B: 29 02 
>0000106D: 29 02 
>0000106F: 5F 92 8B D6 DD 82 63 91 87 41 9B 27 20 A8 FD 60 A7 1D 
>00001081: 07 9A 8A 00 8C 00 30 00 34 12 90 06 00 4C 00 00 00 00 14 00 00 00 00 00 00 00 
>0000109B: 5B 09 00 00 02 10 00 00 00 
>000010A4: 5B 09 01 00 02 11 00 00 00 
>000010AD: 29 02 
>000010AF: 29 02 
>000010B1: 02 87 1B 00 00 00 00 
>000010B8: 29 02 
>000010BA: 02 87 7C 00 00 00 00 
>000010C1: 29 02 
>000010C3: 07 91 8D 00 8E 00 31 00 03 00 00 00 00 10 00 14 00 
>000010D4: 5B 06 00 00 00 07 
>000010DA: 5B 06 01 00 00 08 
>000010E0: 29 02 
>000010E2: 5F 9A F4 27 4A A0 00 DF 42 4D B5 52 39 51 13 02 11 3D 00 00 00 00 20 02 08 00 
>000010FC: 29 02 
>000010FE: 1E 82 
>00001100: 46 02 
>00001102: 5F 92 8B D6 DD 82 63 91 87 41 9B 27 20 A8 FD 60 A7 1D 
>00001114: 07 9A 00 00 00 00 32 00 02 00 20 00 00 45 00 00 00 00 1F 00 00 00 00 00 00 00 
>0000112E: 29 02 
>00001130: 29 02 
>00001132: 29 02 
>00001134: 29 02 
>00001136: 29 02 

Total Size of all record is 0x00001138


***************************************************************
		mPackAlign = 1
		struct MY_EFI_BITS_VARSTORE_DATA : mAlign [1] mTotalSize [0x8]

		struct MY_EFI_BITS_VARSTORE_DATA {
			+00000000[00000000] BitsData <MY_BITS_DATA>
			+00000004[00000004] EfiBitGrayoutTest <UINT32>
			+00000004[00000004] EfiBitNumeric <UINT32>
			+00000004[00000004] EfiBitOneof <UINT32>
			+00000004[00000004] EfiBitCheckbox <UINT32>
			+00000004[00000004]  <UINT32>
		};
---------------------------------------------------------------
		struct MY_EFI_VARSTORE_DATA : mAlign [1] mTotalSize [0x8]

		struct MY_EFI_VARSTORE_DATA {
			+00000000[00000000] Field8 <UINT8>
			+00000001[00000001] Field16 <UINT16>
			+00000003[00000003] OrderedList[3] <UINT8>
			+00000006[00000006] SubmittedCallback <UINT16>
		};
---------------------------------------------------------------
		struct DRIVER_SAMPLE_CONFIGURATION : mAlign [1] mTotalSize [0xdc]

		struct DRIVER_SAMPLE_CONFIGURATION {
			+00000000[00000000] MyStringData[40] <UINT16>
			+00000080[00000050] SomethingHiddenForHtml <UINT16>
			+00000082[00000052] HowOldAreYouInYearsManual <UINT8>
			+00000083[00000053] HowTallAreYouManual <UINT16>
			+00000085[00000055] HowOldAreYouInYears <UINT8>
			+00000086[00000056] HowTallAreYou <UINT16>
			+00000088[00000058] MyFavoriteNumber <UINT8>
			+00000089[00000059] TestLateCheck <UINT8>
			+00000090[0000005a] TestLateCheck2 <UINT8>
			+00000091[0000005b] QuestionAboutTreeHugging <UINT8>
			+00000092[0000005c] ChooseToActivateNuclearWeaponry <UINT8>
			+00000093[0000005d] SuppressGrayOutSomething <UINT8>
			+00000094[0000005e] OrderedList[8] <UINT8>
			+00000102[00000066] BootOrder[8] <UINT16>
			+00000118[00000076] BootOrderLarge <UINT8>
			+00000119[00000077] DynamicRefresh <UINT8>
			+00000120[00000078] DynamicOneof <UINT8>
			+00000121[00000079] DynamicOrderedList[5] <UINT8>
			+00000126[0000007e] Reserved <UINT8>
			+00000127[0000007f] RefData <EFI_HII_REF>
			+00000149[00000095] NameValueVar0 <UINT8>
			+00000150[00000096] NameValueVar1 <UINT16>
			+00000152[00000098] NameValueVar2[20] <UINT16>
			+00000192[000000c0] SerialPortNo <UINT8>
			+00000193[000000c1] SerialPortStatus <UINT8>
			+00000194[000000c2] SerialPortIo <UINT16>
			+00000196[000000c4] SerialPortIrq <UINT8>
			+00000197[000000c5] GetDefaultValueFromCallBack <UINT8>
			+00000198[000000c6] GetDefaultValueFromAccess <UINT8>
			+00000199[000000c7] Time <EFI_HII_TIME>
			+00000202[000000ca] RefreshGuidCount <UINT8>
			+00000203[000000cb] Match2 <UINT8>
			+00000204[000000cc] GetDefaultValueFromCallBackForOrderedList[3] <UINT8>
			+00000207[000000cf] BitCheckbox <UINT8>
			+00000207[000000cf] ReservedBits <UINT8>
			+00000208[000000d0] BitOneof <UINT16>
			+00000208[000000d0]  <UINT16>
			+00000210[000000d2] BitNumeric <UINT16>
			+00000212[000000d4] MyBitData <MY_BITS_DATA>
			+00000216[000000d8] MyUnionData <MY_EFI_UNION_DATA>
			+00000217[000000d9] QuestionXUefiKeywordRestStyle <UINT8>
			+00000218[000000da] QuestionNonXUefiKeywordRestStyle <UINT8>
			+00000219[000000db] QuestionApply <UINT8>
		};
---------------------------------------------------------------
		struct MY_EFI_UNION_DATA : mAlign [1] mTotalSize [0x1]

		struct MY_EFI_UNION_DATA {
			+00000000[00000000] UnionNumeric <UINT8>
			+00000000[00000000] UnionNumericAlias <UINT8>
		};
---------------------------------------------------------------
		struct MY_BITS_DATA : mAlign [1] mTotalSize [0x4]

		struct MY_BITS_DATA {
			+00000000[00000000] NestByteField <UINT16>
			+00000002[00000002]  <UINT8>
			+00000002[00000002] NestBitCheckbox <UINT8>
			+00000002[00000002] NestBitOneof <UINT8>
			+00000002[00000002]  <UINT8>
			+00000003[00000003] NestBitNumeric <UINT8>
		};
---------------------------------------------------------------
		struct EFI_HII_REF : mAlign [16] mTotalSize [0x16]

		struct EFI_HII_REF {
			+00000000[00000000] QuestionId <UINT16>
			+00000002[00000002] FormId <UINT16>
			+00000004[00000004] FormSetGuid <(null)>
			+00000020[00000014] DevicePath <EFI_STRING_ID>
		};
---------------------------------------------------------------
		struct EFI_HII_TIME : mAlign [1] mTotalSize [0x3]

		struct EFI_HII_TIME {
			+00000000[00000000] Hours <UINT8>
			+00000001[00000001] Minutes <UINT8>
			+00000002[00000002] Seconds <UINT8>
		};
---------------------------------------------------------------
		struct EFI_STRING_ID : mAlign [2] mTotalSize [0x2]

		struct EFI_STRING_ID {
		};
---------------------------------------------------------------
		struct EFI_HII_DATE : mAlign [2] mTotalSize [0x4]

		struct EFI_HII_DATE {
			+00000000[00000000] Year <UINT16>
			+00000002[00000002] Month <UINT8>
			+00000003[00000003] Day <UINT8>
		};
---------------------------------------------------------------
		struct BOOLEAN : mAlign [1] mTotalSize [0x1]

		struct BOOLEAN {
		};
---------------------------------------------------------------
		struct UINT8 : mAlign [1] mTotalSize [0x1]

		struct UINT8 {
		};
---------------------------------------------------------------
		struct UINT16 : mAlign [2] mTotalSize [0x2]

		struct UINT16 {
		};
---------------------------------------------------------------
		struct UINT32 : mAlign [4] mTotalSize [0x4]

		struct UINT32 {
		};
---------------------------------------------------------------
		struct UINT64 : mAlign [8] mTotalSize [0x8]

		struct UINT64 {
		};
---------------------------------------------------------------
***************************************************************
